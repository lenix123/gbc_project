{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/Workspace.js\";\nimport React from 'react';\nimport '../assets/css/Workspace.scss';\nimport * as components from \"../Hub\";\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getStyles = (styleType, value) => {\n      this.setState(state => ({\n        text: state + 1\n      }), () => {\n        console.log(this.state);\n      });\n    };\n\n    this.state = {\n      text: '225'\n    };\n  }\n\n  render() {\n    const {\n      themeContext\n    } = this.props;\n    const {\n      userComponentName\n    } = this.props;\n    const Component = components[userComponentName];\n\n    const currentComponent = userComponentName && /*#__PURE__*/_jsxDEV(Component, {\n      className: \"cl-#33333 sz-small bg-#676767\",\n      children: this.state.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 34\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workspace workspace_${themeContext}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace__content\",\n          children: currentComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ControlCenter, {\n          getStyles: this.getStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } // getStyles = (stylesObj) => {\n  //     this.setState({\n  //         styles: stylesObj,\n  //     })\n  // }\n\n\n}\n\nexport default Workspace;","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/Workspace.js"],"names":["React","components","ControlCenter","Workspace","Component","constructor","props","getStyles","styleType","value","setState","state","text","console","log","render","themeContext","userComponentName","currentComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,QAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiCnBC,SAjCmB,GAiCP,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC9B,WAAKC,QAAL,CAAcC,KAAK,KAAK;AACpBC,QAAAA,IAAI,EAAED,KAAK,GAAG;AADM,OAAL,CAAnB,EAEI,MAAM;AACNE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH,OAJD;AAKH,KAvCkB;;AAGf,SAAKA,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKV,KAA5B;AACA,UAAM;AAACW,MAAAA;AAAD,QAAsB,KAAKX,KAAjC;AACA,UAAMF,SAAS,GAAGH,UAAU,CAACgB,iBAAD,CAA5B;;AACA,UAAMC,gBAAgB,GAAGD,iBAAiB,iBACjB,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,+BAAtB;AAAA,gBAAwD,KAAKN,KAAL,CAAWC;AAAnE;AAAA;AAAA;AAAA;AAAA,YADzB;;AAGA,wBACI;AAAK,MAAA,SAAS,EAAG,uBAAsBI,YAAa,EAApD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACKE;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,aAAD;AAAe,UAAA,SAAS,EAAE,KAAKX;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GA1BmC,CA4BpC;AACA;AACA;AACA;AACA;;;AAhCoC;;AA2CxC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport '../assets/css/Workspace.scss'\nimport * as components from \"../Hub\"\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\n\nclass Workspace extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: '225',\n        }\n    }\n\n    render() {\n        const {themeContext} = this.props;\n        const {userComponentName} = this.props;\n        const Component = components[userComponentName];\n        const currentComponent = userComponentName &&\n                                 <Component className={\"cl-#33333 sz-small bg-#676767\"}>{this.state.text}</Component>;\n\n        return (\n            <div className={`workspace workspace_${themeContext}`}>\n                <div className=\"workspace__inner\">\n                    <div className=\"workspace__content\">\n                        {currentComponent}\n                    </div>\n                    <ControlCenter getStyles={this.getStyles}/>\n                </div>\n            </div>\n        )\n    }\n\n    // getStyles = (stylesObj) => {\n    //     this.setState({\n    //         styles: stylesObj,\n    //     })\n    // }\n\n    getStyles = (styleType, value) => {\n        this.setState(state => ({\n            text: state + 1,\n        }), () => {\n            console.log(this.state);\n        });\n    }\n}\n\nexport default Workspace;"]},"metadata":{},"sourceType":"module"}