{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/DirBtn.js\";\nimport React from \"react\";\nimport InnerTree from \"./InnerTree\";\nimport { arrowRight, arrowDown, folderOpen, folderClose } from \"./InnerTree\"; // компонент DirBtn отвечает конкретное папке dirName,\n// при нажатии на кнопку открывается содержимое этой папки\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DirBtn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isActive: false\n    };\n\n    this.goDown = () => {\n      // по нажатию на кнопку изменяем состояние на противоположное\n      this.setState(state => ({\n        isActive: !state.isActive\n      }));\n    };\n\n    this.isActive = () => {\n      return this.state.isActive;\n    };\n  }\n\n  render() {\n    const {\n      dirName\n    } = this.props; // устанавливаем значки для папки в разных положениях\n\n    const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n    const folderIcon = this.isActive() ? folderOpen : folderClose; // открываем содержимое папки, если изменили состояние на true\n\n    const innerTree = this.isActive() && /*#__PURE__*/_jsxDEV(InnerTree, {\n      openDir: dirName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 46\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tree-element__dir\",\n        onClick: this.goDown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tree-element__highlighter tree-element__highlighter_disabled`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), arrowIcon, folderIcon, dirName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), innerTree]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DirBtn;","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/DirBtn.js"],"names":["React","InnerTree","arrowRight","arrowDown","folderOpen","folderClose","DirBtn","Component","state","isActive","goDown","setState","render","dirName","props","arrowIcon","folderIcon","innerTree"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,WAA5C,QAA+D,aAA/D,C,CAEA;AACA;;;;AACA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADyB;;AAAA,SA0BjCC,MA1BiC,GA0BxB,MAAM;AACX;AACA,WAAKC,QAAL,CAAeH,KAAD,KAAY;AAAEC,QAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAnB,OAAZ,CAAd;AACH,KA7BgC;;AAAA,SA+BjCA,QA/BiC,GA+BtB,MAAM;AACb,aAAO,KAAKD,KAAL,CAAWC,QAAlB;AACH,KAjCgC;AAAA;;AAKjCG,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAvB,CADK,CAEL;;AACA,UAAMC,SAAS,GAAG,KAAKN,QAAL,KAAkBN,SAAlB,GAA8BD,UAAhD;AACA,UAAMc,UAAU,GAAG,KAAKP,QAAL,KAAkBL,UAAlB,GAA+BC,WAAlD,CAJK,CAKL;;AACA,UAAMY,SAAS,GAAG,KAAKR,QAAL,mBAAmB,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,YAArC;;AAEA,wBACI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAE,mBAAnB;AACQ,QAAA,OAAO,EAAE,KAAKH,MADtB;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKK,SAHL,EAIKC,UAJL,EAKKH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKI,SARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAzBgC;;AAoCrC,eAAeX,MAAf","sourcesContent":["import React from \"react\";\nimport InnerTree from \"./InnerTree\";\nimport { arrowRight, arrowDown, folderOpen, folderClose } from \"./InnerTree\"\n\n// компонент DirBtn отвечает конкретное папке dirName,\n// при нажатии на кнопку открывается содержимое этой папки\nclass DirBtn extends React.Component {\n    state = {\n        isActive: false\n    }\n\n    render() {\n        const {dirName} = this.props;\n        // устанавливаем значки для папки в разных положениях\n        const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n        const folderIcon = this.isActive() ? folderOpen : folderClose;\n        // открываем содержимое папки, если изменили состояние на true\n        const innerTree = this.isActive() && <InnerTree openDir={dirName}/>\n\n        return(\n            <div>\n                <button className={\"tree-element__dir\"}\n                        onClick={this.goDown}>\n                    <div className={`tree-element__highlighter tree-element__highlighter_disabled`}/>\n                    {arrowIcon}\n                    {folderIcon}\n                    {dirName}\n                </button>\n                {innerTree}\n            </div>\n        )\n    }\n    goDown = () => {\n        // по нажатию на кнопку изменяем состояние на противоположное\n        this.setState((state) => ({ isActive: !state.isActive }))\n    }\n\n    isActive = () => {\n        return this.state.isActive;\n    }\n}\n\nexport default DirBtn;"]},"metadata":{},"sourceType":"module"}