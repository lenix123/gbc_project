{"ast":null,"code":"export default function userTreeBuilder(userComponents) {\n  let userTree = {\n    Saved: {\n      dirs: new Set()\n    },\n    Buttons: {\n      dirs: new Set()\n    },\n    Cards: {\n      dirs: new Set()\n    },\n    Forms: {\n      dirs: new Set()\n    },\n    Authorization: {\n      dirs: new Set()\n    }\n  };\n\n  for (let component of userComponents) {\n    const type = component.type;\n    const prototype = component.prototype;\n    const userComponentName = component.component_name;\n\n    if (type === \"Authorization\") {\n      userTree.Forms.dirs.add(\"Authorization\");\n    } else {\n      userTree.Saved.dirs.add(type);\n    }\n\n    if (!userTree[type].dirs.has(prototype)) {\n      userTree[type].dirs.add(prototype);\n      userTree[prototype] = {\n        files: new Array(userComponentName)\n      };\n    } else {\n      userTree[prototype].files.push(userComponentName);\n    }\n  }\n\n  return userTree;\n}","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/utils/userTree.js"],"names":["userTreeBuilder","userComponents","userTree","Saved","dirs","Set","Buttons","Cards","Forms","Authorization","component","type","prototype","userComponentName","component_name","add","has","files","Array","push"],"mappings":"AACA,eAAe,SAASA,eAAT,CAAyBC,cAAzB,EAAyC;AACpD,MAAIC,QAAQ,GAAG;AAACC,IAAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE,IAAIC,GAAJ;AAAP,KAAR;AACXC,IAAAA,OAAO,EAAE;AAACF,MAAAA,IAAI,EAAE,IAAIC,GAAJ;AAAP,KADE;AAEXE,IAAAA,KAAK,EAAE;AAACH,MAAAA,IAAI,EAAE,IAAIC,GAAJ;AAAP,KAFI;AAGXG,IAAAA,KAAK,EAAE;AAACJ,MAAAA,IAAI,EAAE,IAAIC,GAAJ;AAAP,KAHI;AAIXI,IAAAA,aAAa,EAAE;AAACL,MAAAA,IAAI,EAAE,IAAIC,GAAJ;AAAP;AAJJ,GAAf;;AAMA,OAAK,IAAIK,SAAT,IAAsBT,cAAtB,EAAsC;AAClC,UAAMU,IAAI,GAAGD,SAAS,CAACC,IAAvB;AACA,UAAMC,SAAS,GAAGF,SAAS,CAACE,SAA5B;AACA,UAAMC,iBAAiB,GAAGH,SAAS,CAACI,cAApC;;AAEA,QAAIH,IAAI,KAAK,eAAb,EAA8B;AAC1BT,MAAAA,QAAQ,CAACM,KAAT,CAAeJ,IAAf,CAAoBW,GAApB,CAAwB,eAAxB;AACH,KAFD,MAEO;AACHb,MAAAA,QAAQ,CAACC,KAAT,CAAeC,IAAf,CAAoBW,GAApB,CAAwBJ,IAAxB;AACH;;AAED,QAAI,CAACT,QAAQ,CAACS,IAAD,CAAR,CAAeP,IAAf,CAAoBY,GAApB,CAAwBJ,SAAxB,CAAL,EAAyC;AACrCV,MAAAA,QAAQ,CAACS,IAAD,CAAR,CAAeP,IAAf,CAAoBW,GAApB,CAAwBH,SAAxB;AAEAV,MAAAA,QAAQ,CAACU,SAAD,CAAR,GAAsB;AAACK,QAAAA,KAAK,EAAE,IAAIC,KAAJ,CAAUL,iBAAV;AAAR,OAAtB;AACH,KAJD,MAIO;AACHX,MAAAA,QAAQ,CAACU,SAAD,CAAR,CAAoBK,KAApB,CAA0BE,IAA1B,CAA+BN,iBAA/B;AACH;AACJ;;AAED,SAAOX,QAAP;AACH","sourcesContent":["\nexport default function userTreeBuilder(userComponents) {\n    let userTree = {Saved: {dirs: new Set()},\n        Buttons: {dirs: new Set()},\n        Cards: {dirs: new Set()},\n        Forms: {dirs: new Set()},\n        Authorization: {dirs: new Set()}};\n\n    for (let component of userComponents) {\n        const type = component.type;\n        const prototype = component.prototype;\n        const userComponentName = component.component_name;\n\n        if (type === \"Authorization\") {\n            userTree.Forms.dirs.add(\"Authorization\");\n        } else {\n            userTree.Saved.dirs.add(type);\n        }\n\n        if (!userTree[type].dirs.has(prototype)) {\n            userTree[type].dirs.add(prototype);\n\n            userTree[prototype] = {files: new Array(userComponentName)};\n        } else {\n            userTree[prototype].files.push(userComponentName);\n        }\n    }\n\n    return userTree;\n}"]},"metadata":{},"sourceType":"module"}