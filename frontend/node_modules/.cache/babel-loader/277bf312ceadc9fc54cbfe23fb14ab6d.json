{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/ExportMenu/DisplayingText.js\";\nimport React from \"react\";\nimport \"../../../assets/css/ControlCenter/Instruction.scss\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/oceanicNext\"; // компонент DisplayingText просто выводит переданный текст с подсветкой кода\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DisplayingText extends React.Component {\n  render() {\n    const text = this.props.text;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instruction__text\",\n      children: /*#__PURE__*/_jsxDEV(Highlight, { ...defaultProps,\n        code: text,\n        language: \"jsx\",\n        theme: theme,\n        children: _ref => {\n          let {\n            style,\n            tokens,\n            getLineProps,\n            getTokenProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"highlight\",\n            style: style,\n            children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", { ...getLineProps({\n                line,\n                key: i\n              }),\n              children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", { ...getTokenProps({\n                  token,\n                  key\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DisplayingText;","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/ExportMenu/DisplayingText.js"],"names":["React","Highlight","defaultProps","theme","DisplayingText","Component","render","text","props","style","tokens","getLineProps","getTokenProps","map","line","i","key","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oDAAP;AACA,OAAOC,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,yCAAlB,C,CAEA;;;;AACA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AACzCC,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAxB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAE,mBAAhB;AAAA,6BACI,QAAC,SAAD,OAAeL,YAAf;AAA6B,QAAA,IAAI,EAAEK,IAAnC;AAAyC,QAAA,QAAQ,EAAC,KAAlD;AAAwD,QAAA,KAAK,EAAEJ,KAA/D;AAAA,kBACK;AAAA,cAAC;AAAEM,YAAAA,KAAF;AAASC,YAAAA,MAAT;AAAiBC,YAAAA,YAAjB;AAA+BC,YAAAA;AAA/B,WAAD;AAAA,8BACG;AAAK,YAAA,SAAS,EAAE,WAAhB;AAA6B,YAAA,KAAK,EAAEH,KAApC;AAAA,sBACKC,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBACR,oBAASJ,YAAY,CAAC;AAAEG,gBAAAA,IAAF;AAAQE,gBAAAA,GAAG,EAAED;AAAb,eAAD,CAArB;AAAA,wBACKD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,kBACN,qBAAUJ,aAAa,CAAC;AAAEK,kBAAAA,KAAF;AAASD,kBAAAA;AAAT,iBAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADH;AADL;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBADH;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH;;AArBwC;;AAwB7C,eAAeZ,cAAf","sourcesContent":["import React from \"react\";\nimport \"../../../assets/css/ControlCenter/Instruction.scss\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/oceanicNext\";\n\n// компонент DisplayingText просто выводит переданный текст с подсветкой кода\nclass DisplayingText extends React.Component {\n    render() {\n        const text = this.props.text;\n\n        return (\n            <div className={\"instruction__text\"}>\n                <Highlight {...defaultProps} code={text} language=\"jsx\" theme={theme}>\n                    {({ style, tokens, getLineProps, getTokenProps }) => (\n                        <pre className={\"highlight\"} style={style}>\n                            {tokens.map((line, i) => (\n                                <div {...getLineProps({ line, key: i })}>\n                                    {line.map((token, key) => (\n                                        <span {...getTokenProps({ token, key })} />\n                                    ))}\n                                </div>\n                            ))}\n                        </pre>\n                    )}\n                </Highlight>\n            </div>\n        );\n    }\n}\n\nexport default DisplayingText;"]},"metadata":{},"sourceType":"module"}