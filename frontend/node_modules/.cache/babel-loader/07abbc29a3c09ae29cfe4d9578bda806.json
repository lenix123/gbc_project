{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/ControlCenter/Instruction.js\";\nimport React from \"react\";\nimport \"../../assets/css/ControlCenter/Instruction.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Instruction extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.copyToClipboard = () => {\n      let str = document.getElementById(\"copy\").innerText;\n      let el = document.createElement('textarea');\n      el.value = str;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instruction\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instruction__text\",\n        id: \"copy\",\n        children: this.props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.copyToClipboard,\n        className: \"instruction__button\",\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Instruction;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/ControlCenter/Instruction.js"],"names":["React","Instruction","Component","copyToClipboard","str","document","getElementById","innerText","el","createElement","value","body","appendChild","select","execCommand","removeChild","render","props","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iDAAP;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SAatCC,eAbsC,GAapB,MAAM;AACpB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAA1C;AACA,UAAIC,EAAE,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,KAAH,GAAWN,GAAX;AACAC,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACAA,MAAAA,EAAE,CAACK,MAAH;AACAR,MAAAA,QAAQ,CAACS,WAAT,CAAqB,MAArB;AACAT,MAAAA,QAAQ,CAACM,IAAT,CAAcI,WAAd,CAA0BP,EAA1B;AACH,KArBqC;AAAA;;AACtCQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,8BACI;AAAG,QAAA,SAAS,EAAE,mBAAd;AAAmC,QAAA,EAAE,EAAE,MAAvC;AAAA,kBACK,KAAKC,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKf,eAAtB;AAAuC,QAAA,SAAS,EAAE,qBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAZqC;;AAwB1C,eAAeF,WAAf","sourcesContent":["import React from \"react\";\nimport \"../../assets/css/ControlCenter/Instruction.scss\"\n\nclass Instruction extends React.Component {\n    render() {\n        return (\n            <div className={\"instruction\"}>\n                <p className={\"instruction__text\"} id={\"copy\"}>\n                    {this.props.text}\n                </p>\n                <button onClick={this.copyToClipboard} className={\"instruction__button\"}>\n                    Copy\n                </button>\n            </div>\n        )\n    }\n    copyToClipboard = () => {\n        let str = document.getElementById(\"copy\").innerText;\n        let el = document.createElement('textarea');\n        el.value = str;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n}\n\nexport default Instruction;"]},"metadata":{},"sourceType":"module"}