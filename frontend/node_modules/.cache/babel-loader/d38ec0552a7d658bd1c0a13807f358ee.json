{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Authorization/Telephone/Telephone.js\";\nimport React, { Component } from \"react\";\nimport \"../Login.css\";\nimport StyleReader from \"../../../../../utils/StyleReader\";\nimport { phoneinput } from \"./phoneinput\";\nimport { phoneKeyDown } from \"./phoneinput\";\nimport { phonePaste } from \"./phoneinput\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Telephone extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleChange = event => {\n      phoneinput(event);\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.onPhoneKeyDown = event => {\n      phoneKeyDown(event);\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.onPhonePaste = event => {\n      phonePaste(event);\n      this.setState({\n        value: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      componentsState,\n      componentWithSync\n    } = this.props;\n    const condition = this.state.value === '' ? '' : 'filled';\n    let componentStyle;\n\n    if (componentWithSync) {\n      componentStyle = componentsState && componentsState[componentWithSync];\n    } else {\n      componentStyle = componentsState && componentsState[\"Telephone\"];\n    }\n\n    const styleReader = new StyleReader(componentStyle);\n    const label = componentStyle.text || \"Telephone\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styleReader.userClassName + \"login__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"data-tel-input\",\n        className: \"login__input\",\n        style: styleReader.style,\n        placeholder: \"\",\n        onChange: this.handleChange,\n        onPaste: this.onPhonePaste,\n        onKeyDown: this.onPhoneKeyDown,\n        value: this.state.value,\n        maxLength: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `login__label login__label_${condition}`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(Telephone);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Authorization/Telephone/Telephone.js"],"names":["React","Component","StyleReader","phoneinput","phoneKeyDown","phonePaste","connect","Telephone","state","value","handleChange","event","setState","target","onPhoneKeyDown","onPhonePaste","render","componentsState","componentWithSync","props","condition","componentStyle","styleReader","label","text","userClassName","style","mapStateToProps","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,YAAR,QAA2B,cAA3B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE;AADH,KADsB;;AAAA,SAoC9BC,YApC8B,GAoCdC,KAAD,IAAW;AACtBR,MAAAA,UAAU,CAACQ,KAAD,CAAV;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AADV,OAAd;AAGH,KAzC6B;;AAAA,SA2C9BK,cA3C8B,GA2CZH,KAAD,IAAW;AACxBP,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AADV,OAAd;AAGH,KAhD6B;;AAAA,SAkD9BM,YAlD8B,GAkDdJ,KAAD,IAAW;AACtBN,MAAAA,UAAU,CAACM,KAAD,CAAV;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AADV,OAAd;AAGH,KAvD6B;AAAA;;AAK9BO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,QAAuC,KAAKC,KAAlD;AACA,UAAMC,SAAS,GAAG,KAAKZ,KAAL,CAAWC,KAAX,KAAqB,EAArB,GAA0B,EAA1B,GAA+B,QAAjD;AACA,QAAIY,cAAJ;;AAEA,QAAIH,iBAAJ,EAAuB;AACnBG,MAAAA,cAAc,GAAGJ,eAAe,IAAIA,eAAe,CAACC,iBAAD,CAAnD;AACH,KAFD,MAEO;AACHG,MAAAA,cAAc,GAAGJ,eAAe,IAAIA,eAAe,CAAC,WAAD,CAAnD;AACH;;AAED,UAAMK,WAAW,GAAG,IAAIpB,WAAJ,CAAgBmB,cAAhB,CAApB;AACA,UAAME,KAAK,GAAGF,cAAc,CAACG,IAAf,IAAuB,WAArC;AAEA,wBACI;AAAM,MAAA,SAAS,EAAEF,WAAW,CAACG,aAAZ,GAA4B,cAA7C;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,KAAZ;AACO,QAAA,EAAE,EAAE,gBADX;AAEO,QAAA,SAAS,EAAE,cAFlB;AAGO,QAAA,KAAK,EAAEH,WAAW,CAACI,KAH1B;AAIO,QAAA,WAAW,EAAC,EAJnB;AAKO,QAAA,QAAQ,EAAE,KAAKhB,YALtB;AAMO,QAAA,OAAO,EAAE,KAAKK,YANrB;AAOO,QAAA,SAAS,EAAE,KAAKD,cAPvB;AAQO,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KARzB;AASO,QAAA,SAAS,EAAE;AATlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,SAAS,EAAG,6BAA4BW,SAAU,EAAzD;AAAA,kBAA6DG;AAA7D;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAlC6B;;AA0DlC,MAAMI,eAAe,GAAInB,KAAD,IAAW;AAC/B,SAAO;AACHS,IAAAA,eAAe,EAAET,KAAK,CAACoB;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAetB,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,SAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Login.css\"\nimport StyleReader from \"../../../../../utils/StyleReader\";\nimport {phoneinput} from \"./phoneinput\";\nimport {phoneKeyDown} from \"./phoneinput\";\nimport {phonePaste} from \"./phoneinput\";\nimport {connect} from \"react-redux\";\n\nclass Telephone extends Component {\n    state = {\n        value: \"\"\n    }\n\n    render() {\n        const {componentsState, componentWithSync} = this.props;\n        const condition = this.state.value === '' ? '' : 'filled'\n        let componentStyle;\n\n        if (componentWithSync) {\n            componentStyle = componentsState && componentsState[componentWithSync];\n        } else {\n            componentStyle = componentsState && componentsState[\"Telephone\"];\n        }\n\n        const styleReader = new StyleReader(componentStyle);\n        const label = componentStyle.text || \"Telephone\";\n\n        return (\n            <form className={styleReader.userClassName + \"login__group\"}>\n                <input type=\"tel\"\n                       id={\"data-tel-input\"}\n                       className={\"login__input\"}\n                       style={styleReader.style}\n                       placeholder=''\n                       onChange={this.handleChange}\n                       onPaste={this.onPhonePaste}\n                       onKeyDown={this.onPhoneKeyDown}\n                       value={this.state.value}\n                       maxLength={18} />\n                <label className={`login__label login__label_${condition}`}>{label}</label>\n            </form>\n        )\n    }\n\n    handleChange = (event) => {\n        phoneinput(event);\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    onPhoneKeyDown = (event) => {\n        phoneKeyDown(event);\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    onPhonePaste = (event) => {\n        phonePaste(event);\n        this.setState({\n            value: event.target.value\n        })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(Telephone);"]},"metadata":{},"sourceType":"module"}