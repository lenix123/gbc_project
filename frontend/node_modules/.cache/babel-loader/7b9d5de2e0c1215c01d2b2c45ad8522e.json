{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/InnerComponent.js\";\nimport React, { Component } from 'react';\nimport list from '../list.json';\nimport './assets/css/Inside.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deep = () => {\n      this.setState(state => ({\n        isActive: !state.isActive\n      }));\n    };\n\n    this.state = {\n      id: this.props.id + 1,\n      isActive: false\n    };\n  }\n\n  render() {\n    const listPosition = list[this.props.id];\n\n    const innerComponent = this.state.isActive && /*#__PURE__*/_jsxDEV(InnerComponent, {\n      id: this.state.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 55\n    }, this);\n\n    const dirElement = listPosition.dirs.map((dir, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"tree-element__dir\",\n      onClick: this.deep,\n      children: dir\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this));\n    const fileElement = listPosition.files.map((file, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"tree-element__file\",\n      children: file\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-element\",\n      children: [dirElement, innerComponent, fileElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InnerComponent;","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/InnerComponent.js"],"names":["React","Component","list","InnerComponent","constructor","props","deep","setState","state","isActive","id","render","listPosition","innerComponent","dirElement","dirs","map","dir","index","fileElement","files","file"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,0BAAP;;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoCnBC,IApCmB,GAoCZ,MAAM;AACT,WAAKC,QAAL,CAAeC,KAAD,KAAY;AAAEC,QAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAnB,OAAZ,CAAd;AACH,KAtCkB;;AAEf,SAAKD,KAAL,GAAa;AACTE,MAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWK,EAAX,GAAgB,CADX;AAETD,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDE,EAAAA,MAAM,GAAI;AACN,UAAMC,YAAY,GAAGV,IAAI,CAAC,KAAKG,KAAL,CAAWK,EAAZ,CAAzB;;AACA,UAAMG,cAAc,GAAG,KAAKL,KAAL,CAAWC,QAAX,iBAAuB,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE;AAA/B;AAAA;AAAA;AAAA;AAAA,YAA9C;;AAEA,UAAMI,UAAU,GAAGF,YAAY,CAACG,IAAb,CAAkBC,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,kBACrC;AAAQ,MAAA,SAAS,EAAE,mBAAnB;AAEQ,MAAA,OAAO,EAAE,KAAKZ,IAFtB;AAAA,gBAGKW;AAHL,OACaC,KADb;AAAA;AAAA;AAAA;AAAA,YADe,CAAnB;AAQA,UAAMC,WAAW,GAAGP,YAAY,CAACQ,KAAb,CAAmBJ,GAAnB,CAAuB,CAACK,IAAD,EAAOH,KAAP,kBACvC;AAAQ,MAAA,SAAS,EAAE,oBAAnB;AAAA,gBAEKG;AAFL,OACaH,KADb;AAAA;AAAA;AAAA;AAAA,YADgB,CAApB;AAOA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKJ,UADL,EAEKD,cAFL,EAGKM,WAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAnCkC;;AA0CvC,eAAehB,cAAf","sourcesContent":["import React, {Component} from 'react'\nimport list from '../list.json'\nimport './assets/css/Inside.scss'\n\nclass InnerComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id + 1,\n            isActive: false\n        }\n    }\n\n    render () {\n        const listPosition = list[this.props.id];\n        const innerComponent = this.state.isActive && <InnerComponent id={this.state.id} />\n\n        const dirElement = listPosition.dirs.map((dir, index) => (\n            <button className={\"tree-element__dir\"}\n                    key={index}\n                    onClick={this.deep}>\n                {dir}\n            </button>\n        ));\n\n        const fileElement = listPosition.files.map((file, index) => (\n            <button className={\"tree-element__file\"}\n                    key={index}>\n                {file}\n            </button>\n        ));\n\n        return (\n            <div className=\"tree-element\">\n                {dirElement}\n                {innerComponent}\n                {fileElement}\n            </div>\n        )\n    }\n\n    deep = () => {\n        this.setState((state) => ({ isActive: !state.isActive }))\n    }\n}\n\nexport default InnerComponent;"]},"metadata":{},"sourceType":"module"}