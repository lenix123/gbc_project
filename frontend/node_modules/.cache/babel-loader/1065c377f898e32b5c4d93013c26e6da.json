{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Buttons/Classic/Classic.js\";\nimport React, { Component } from 'react';\nimport \"./Classic.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Classic extends Component {\n  render() {\n    const {\n      isUserComponent,\n      userComponentName\n    } = this.props;\n    let componentsState, componentStyle;\n\n    if (!isUserComponent) {\n      componentsState = this.props.componentsState;\n      componentStyle = componentsState && componentsState[\"Classic\"];\n    } else {\n      componentsState = this.props.userLibrary;\n      console.log(componentsState);\n      console.log(userComponentName);\n      componentStyle = componentsState && componentsState[userComponentName];\n    }\n\n    const text = componentStyle.text || \"Scooby Doo\";\n    const styleReader = new StyleReader(componentStyle);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: this.props.className + \" classic-btn\",\n      style: styleReader.style,\n      onClick: e => this.handleClick(e),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState,\n    isUserComponent: state.currentComponent.isUserComponent,\n    userComponentName: state.currentComponent.userComponentName,\n    userLibrary: state.userLibrary\n  };\n};\n\nexport default connect(mapStateToProps)(Classic);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Buttons/Classic/Classic.js"],"names":["React","Component","StyleReader","connect","Classic","render","isUserComponent","userComponentName","props","componentsState","componentStyle","userLibrary","console","log","text","styleReader","className","style","e","handleClick","preventDefault","mapStateToProps","state","libraryState","currentComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,QAAuC,KAAKC,KAAlD;AACA,QAAIC,eAAJ,EAAqBC,cAArB;;AACA,QAAI,CAACJ,eAAL,EAAsB;AAClBG,MAAAA,eAAe,GAAG,KAAKD,KAAL,CAAWC,eAA7B;AACAC,MAAAA,cAAc,GAAGD,eAAe,IAAIA,eAAe,CAAC,SAAD,CAAnD;AACH,KAHD,MAGO;AACHA,MAAAA,eAAe,GAAG,KAAKD,KAAL,CAAWG,WAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYN,iBAAZ;AACAG,MAAAA,cAAc,GAAGD,eAAe,IAAIA,eAAe,CAACF,iBAAD,CAAnD;AACH;;AAED,UAAMO,IAAI,GAAGJ,cAAc,CAACI,IAAf,IAAuB,YAApC;AACA,UAAMC,WAAW,GAAG,IAAIb,WAAJ,CAAgBQ,cAAhB,CAApB;AAEA,wBACI;AAAQ,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWQ,SAAX,GAAuB,cAA1C;AACQ,MAAA,KAAK,EAAED,WAAW,CAACE,KAD3B;AAEQ,MAAA,OAAO,EAAGC,CAAC,IAAI,KAAKC,WAAL,CAAiBD,CAAjB,CAFvB;AAAA,gBAGKJ;AAHL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDK,EAAAA,WAAW,CAACD,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACE,cAAF;AACH;;AA5B2B;;AA+BhC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,eAAe,EAAEa,KAAK,CAACC,YADpB;AAEHjB,IAAAA,eAAe,EAAEgB,KAAK,CAACE,gBAAN,CAAuBlB,eAFrC;AAGHC,IAAAA,iBAAiB,EAAEe,KAAK,CAACE,gBAAN,CAAuBjB,iBAHvC;AAIHI,IAAAA,WAAW,EAAEW,KAAK,CAACX;AAJhB,GAAP;AAMH,CAPD;;AASA,eAAeR,OAAO,CAACkB,eAAD,CAAP,CAAyBjB,OAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport \"./Classic.css\"\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport {connect} from \"react-redux\";\n\nclass Classic extends Component {\n    render() {\n        const {isUserComponent, userComponentName} = this.props;\n        let componentsState, componentStyle;\n        if (!isUserComponent) {\n            componentsState = this.props.componentsState;\n            componentStyle = componentsState && componentsState[\"Classic\"];\n        } else {\n            componentsState = this.props.userLibrary;\n            console.log(componentsState)\n            console.log(userComponentName)\n            componentStyle = componentsState && componentsState[userComponentName];\n        }\n\n        const text = componentStyle.text || \"Scooby Doo\";\n        const styleReader = new StyleReader(componentStyle);\n\n        return (\n            <button className={this.props.className + \" classic-btn\"}\n                    style={styleReader.style}\n                    onClick={ e => this.handleClick(e) }>\n                {text}\n            </button>\n        )\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState,\n        isUserComponent: state.currentComponent.isUserComponent,\n        userComponentName: state.currentComponent.userComponentName,\n        userLibrary: state.userLibrary,\n    }\n}\n\nexport default connect(mapStateToProps)(Classic);"]},"metadata":{},"sourceType":"module"}