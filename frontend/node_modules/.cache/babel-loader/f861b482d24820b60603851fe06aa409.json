{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/ControlCenter/ControlCenter.js\";\nimport React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlCenter.scss';\nimport Tabs from \"./Tabs.js\";\nimport StyleMenu from \"./StyleMenu\";\nimport ExportMenu from \"./ExportMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ControlCenter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTab: 'Style',\n      currentName: ''\n    };\n\n    this.switchTab = tabName => {\n      this.setState({\n        currentTab: tabName\n      });\n    };\n\n    this.currentTab = () => {\n      return this.state.currentTab;\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.currentName !== this.props.componentName) {\n      this.setState({\n        currentName: this.props.componentName\n      });\n    }\n  }\n\n  render() {\n    if (this.state.currentName !== this.props.componentName) {\n      const {\n        getStyles\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-center\",\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          currentTab: this.currentTab(),\n          switchTab: this.switchTab\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), this.currentTab() === 'Style' && /*#__PURE__*/_jsxDEV(StyleMenu, {\n          getStyles: getStyles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 55\n        }, this), this.currentTab() === 'Export' && /*#__PURE__*/_jsxDEV(ExportMenu, {\n          componentName: this.props.componentName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default ControlCenter;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/ControlCenter/ControlCenter.js"],"names":["React","Component","Tabs","StyleMenu","ExportMenu","ControlCenter","state","currentTab","currentName","switchTab","tabName","setState","componentDidUpdate","prevProps","prevState","snapshot","props","componentName","render","getStyles"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mDAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B;AACJC,MAAAA,UAAU,EAAE,OADR;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAD0B;;AAAA,SA0BlCC,SA1BkC,GA0BrBC,OAAD,IAAa;AACrB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,UAAU,EAAEG;AADF,OAAd;AAGH,KA9BiC;;AAAA,SAgClCH,UAhCkC,GAgCrB,MAAM;AACf,aAAO,KAAKD,KAAL,CAAWC,UAAlB;AACH,KAlCiC;AAAA;;AAMlCK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAIF,SAAS,CAACL,WAAV,KAA0B,KAAKQ,KAAL,CAAWC,aAAzC,EAAwD;AACpD,WAAKN,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE,KAAKQ,KAAL,CAAWC;AAAzB,OAAd;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKZ,KAAL,CAAWE,WAAX,KAA2B,KAAKQ,KAAL,CAAWC,aAA1C,EAAyD;AACrD,YAAM;AAACE,QAAAA;AAAD,UAAe,KAAKH,KAA1B;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,UAAU,EAAE,KAAKT,UAAL,EAAlB;AACM,UAAA,SAAS,EAAE,KAAKE;AADtB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGK,KAAKF,UAAL,OAAsB,OAAtB,iBAAiC,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEY;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAHtC,EAIK,KAAKZ,UAAL,OAAsB,QAAtB,iBAAkC,QAAC,UAAD;AAAY,UAAA,aAAa,EAAE,KAAKS,KAAL,CAAWC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;AACJ;;AAxBiC;;AAqCtC,eAAeZ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlCenter.scss';\nimport Tabs from \"./Tabs.js\";\nimport StyleMenu from \"./StyleMenu\";\nimport ExportMenu from \"./ExportMenu\";\n\nclass ControlCenter extends Component {\n    state = {\n        currentTab: 'Style',\n        currentName: ''\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.currentName !== this.props.componentName) {\n            this.setState({currentName: this.props.componentName})\n        }\n    }\n\n    render() {\n        if (this.state.currentName !== this.props.componentName) {\n            const {getStyles} =  this.props;\n            return(\n                <div className=\"control-center\">\n                    <Tabs currentTab={this.currentTab()}\n                          switchTab={this.switchTab}/>\n                    {this.currentTab() === 'Style' && <StyleMenu getStyles={getStyles}/>}\n                    {this.currentTab() === 'Export' && <ExportMenu componentName={this.props.componentName}/>}\n                </div>\n            )\n        }\n    }\n\n    switchTab = (tabName) => {\n        this.setState({\n            currentTab: tabName,\n        })\n    }\n\n    currentTab = () => {\n        return this.state.currentTab;\n    }\n}\n\nexport default ControlCenter;\n"]},"metadata":{},"sourceType":"module"}