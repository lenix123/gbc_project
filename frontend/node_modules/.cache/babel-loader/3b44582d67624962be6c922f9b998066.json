{"ast":null,"code":"import { SHOW_NEW_COMPONENT } from \"./actions\";\nconst defaultState = {\n  componentName: \"\"\n};\nexport const currentComponentReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case SHOW_NEW_COMPONENT:\n      // если пользователь вызывает компонент, который уже отображается,\n      // значит этот компанент больше не нужно отображать\n      if (action.payload === state.componentName) {\n        return { ...state,\n          componentName: \"\"\n        };\n      } else {\n        // если пользователь вызывает новый компонент из библиотеки,\n        // то его нужно отобразить\n        return { ...state,\n          componentName: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/store/currentComponent/reducers.js"],"names":["SHOW_NEW_COMPONENT","defaultState","componentName","currentComponentReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,WAAnC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE;AADE,CAArB;AAIA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAL;AACI;AACA;AACA,UAAIK,MAAM,CAACE,OAAP,KAAmBH,KAAK,CAACF,aAA7B,EAA4C;AACxC,eAAO,EACH,GAAGE,KADA;AAEHF,UAAAA,aAAa,EAAE;AAFZ,SAAP;AAIH,OALD,MAKO;AACH;AACA;AACA,eAAO,EACH,GAAGE,KADA;AAEHF,UAAAA,aAAa,EAAEG,MAAM,CAACE;AAFnB,SAAP;AAIH;;AACL;AACI,aAAOH,KAAP;AAlBR;AAoBH,CArBM","sourcesContent":["import { SHOW_NEW_COMPONENT } from \"./actions\";\n\nconst defaultState = {\n    componentName: \"\"\n};\n\nexport const currentComponentReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SHOW_NEW_COMPONENT:\n            // если пользователь вызывает компонент, который уже отображается,\n            // значит этот компанент больше не нужно отображать\n            if (action.payload === state.componentName) {\n                return {\n                    ...state,\n                    componentName: \"\"\n                }\n            } else {\n                // если пользователь вызывает новый компонент из библиотеки,\n                // то его нужно отобразить\n                return {\n                    ...state,\n                    componentName: action.payload\n                }\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}