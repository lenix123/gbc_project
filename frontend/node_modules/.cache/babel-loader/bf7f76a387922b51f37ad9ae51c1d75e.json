{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/DirBtn.js\";\nimport React from \"react\";\nimport InnerTree from \"./InnerTree\";\nimport { arrowRight, arrowDown, folderOpen, folderClose } from \"./InnerTree\"; // компонент DirBtn отвечает конкретное папке dirName,\n// при нажатии на кнопку открывается содержимое этой папки\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DirBtn extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isActive: false\n    };\n\n    this.goDown = () => {\n      // по нажатию на кнопку изменяем состояние на противоположное\n      const prevIsActive = this.state.isActive;\n      this.setState({\n        isActive: !prevIsActive\n      });\n    };\n  }\n\n  render() {\n    const {\n      dirName,\n      tree\n    } = this.props;\n    const isActive = this.state.isActive; // устанавливаем значки для папки в разных положениях\n\n    const arrowIcon = isActive ? arrowDown : arrowRight;\n    const folderIcon = isActive ? folderOpen : folderClose; // открываем содержимое папки, если изменили состояние на true\n\n    const innerTree = isActive && /*#__PURE__*/_jsxDEV(InnerTree, {\n      openDir: dirName,\n      tree: tree\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 39\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tree-element__dir\",\n        onClick: this.goDown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tree-element__highlighter tree-element__highlighter_disabled`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), arrowIcon, folderIcon, dirName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), innerTree]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DirBtn;","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/DirBtn.js"],"names":["React","InnerTree","arrowRight","arrowDown","folderOpen","folderClose","DirBtn","Component","state","isActive","goDown","prevIsActive","setState","render","dirName","tree","props","arrowIcon","folderIcon","innerTree"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,WAA5C,QAA+D,aAA/D,C,CAEA;AACA;;;;AACA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADyB;;AAAA,SA2BjCC,MA3BiC,GA2BxB,MAAM;AACX;AACA,YAAMC,YAAY,GAAG,KAAKH,KAAL,CAAWC,QAAhC;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE,CAACE;AAAb,OAAd;AACH,KA/BgC;AAAA;;AAKjCE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV,QAAkB,KAAKC,KAA7B;AACA,UAAMP,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B,CAFK,CAGL;;AACA,UAAMQ,SAAS,GAAGR,QAAQ,GAAGN,SAAH,GAAeD,UAAzC;AACA,UAAMgB,UAAU,GAAGT,QAAQ,GAAGL,UAAH,GAAgBC,WAA3C,CALK,CAML;;AACA,UAAMc,SAAS,GAAGV,QAAQ,iBAAI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEK,OAApB;AAA6B,MAAA,IAAI,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAA9B;;AAEA,wBACI;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAE,mBAAnB;AACQ,QAAA,OAAO,EAAE,KAAKL,MADtB;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKO,SAHL,EAIKC,UAJL,EAKKJ,OALL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKK,SARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA1BgC;;AAkCrC,eAAeb,MAAf","sourcesContent":["import React from \"react\";\nimport InnerTree from \"./InnerTree\";\nimport { arrowRight, arrowDown, folderOpen, folderClose } from \"./InnerTree\"\n\n// компонент DirBtn отвечает конкретное папке dirName,\n// при нажатии на кнопку открывается содержимое этой папки\nclass DirBtn extends React.Component {\n    state = {\n        isActive: false\n    }\n\n    render() {\n        const {dirName, tree} = this.props;\n        const isActive = this.state.isActive;\n        // устанавливаем значки для папки в разных положениях\n        const arrowIcon = isActive ? arrowDown : arrowRight;\n        const folderIcon = isActive ? folderOpen : folderClose;\n        // открываем содержимое папки, если изменили состояние на true\n        const innerTree = isActive && <InnerTree openDir={dirName} tree={tree}/>\n\n        return(\n            <div>\n                <button className={\"tree-element__dir\"}\n                        onClick={this.goDown}>\n                    <div className={`tree-element__highlighter tree-element__highlighter_disabled`}/>\n                    {arrowIcon}\n                    {folderIcon}\n                    {dirName}\n                </button>\n                {innerTree}\n            </div>\n        )\n    }\n    goDown = () => {\n        // по нажатию на кнопку изменяем состояние на противоположное\n        const prevIsActive = this.state.isActive;\n        this.setState({ isActive: !prevIsActive })\n    }\n}\n\nexport default DirBtn;"]},"metadata":{},"sourceType":"module"}