{"ast":null,"code":"'use strict';\n\nclass StyleReader {\n  constructor(className) {\n    this.className = className;\n    this._userClassName = '';\n    this._style = {};\n  }\n\n  get userClassName() {\n    this.decomposeClassName();\n    return this._userClassName;\n  }\n\n  get style() {\n    this.decomposeClassName();\n    return this._style;\n  }\n\n  decomposeClassName() {\n    const properties = this.className.split(' ');\n    properties.forEach(property => {\n      let propertyName = property.split(\"-\")[0];\n      let value = property.split(\"-\")[1];\n\n      switch (propertyName) {\n        case 'fs':\n          this.style.fontSize = value;\n          break;\n\n        case 'fw':\n          this.style.fontWeight = value;\n          break;\n\n        case 'bg':\n          this.style.background = value;\n          break;\n\n        case 'cl':\n          this.style.color = value;\n          break;\n\n        default:\n          this._userClassName += property;\n      }\n    });\n  }\n\n} // const properties = this.props.className.split(\" \");\n//\n// const colors = {\n//     background: '',\n//     color: ''\n// }\n//\n// let size;\n// let allUserClass = [];\n// let text = this.props.children || \"Scooby Doo\";\n//\n// for (let property of properties) {\n//     let propertyName = property.split(\"-\")[0];\n//     let value = property.split(\"-\")[1];\n//\n//     if (propertyName === \"cl\") {\n//         colors[\"color\"] = value;\n//     } else if (propertyName === \"bg\") {\n//         colors[\"background\"] = value;\n//     } else if (propertyName === \"sz\") {\n//         size = value.toLowerCase();\n//     } else {\n//         allUserClass.push(propertyName);\n//     }\n// }\n//\n// let fullClass;\n//\n// if (size === \"small\") {\n//     fullClass = `${allUserClass.join(\" \")}buttonWaves buttonWaves_small`;\n// } else if (size === \"medium\") {\n//     fullClass = `${allUserClass.join(\" \")}buttonWaves buttonWaves_medium`;\n// } else {\n//     fullClass = `${allUserClass.join(\" \")}buttonWaves`;\n// }\n//\n// return (<button className={`${fullClass}`} style={colors}>\n//     <p>{text}</p>\n//     <span className={\"buttonWaves__inner\"}>\n//             <span className={\"buttonWaves__wave\"}/>\n//             <span className={\"buttonWaves__wave\"}/>\n//             <span className={\"buttonWaves__wave\"}/>\n//             <span className={\"buttonWaves__wave\"}/>\n//         </span>\n// </button>);\n\n\nexport default StyleReader;","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/StyleReader.js"],"names":["StyleReader","constructor","className","_userClassName","_style","userClassName","decomposeClassName","style","properties","split","forEach","property","propertyName","value","fontSize","fontWeight","background","color"],"mappings":"AAAA;;AAEA,MAAMA,WAAN,CAAkB;AACdC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,MAAL,GAAc,EAAd;AACH;;AAEgB,MAAbC,aAAa,GAAG;AAChB,SAAKC,kBAAL;AACA,WAAO,KAAKH,cAAZ;AACH;;AAEQ,MAALI,KAAK,GAAG;AACR,SAAKD,kBAAL;AACA,WAAO,KAAKF,MAAZ;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,UAAME,UAAU,GAAG,KAAKN,SAAL,CAAeO,KAAf,CAAqB,GAArB,CAAnB;AAEAD,IAAAA,UAAU,CAACE,OAAX,CAAmBC,QAAQ,IAAI;AAC3B,UAAIC,YAAY,GAAGD,QAAQ,CAACF,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAnB;AACA,UAAII,KAAK,GAAGF,QAAQ,CAACF,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAZ;;AAEA,cAAQG,YAAR;AACI,aAAK,IAAL;AACI,eAAKL,KAAL,CAAWO,QAAX,GAAsBD,KAAtB;AACA;;AACJ,aAAK,IAAL;AACI,eAAKN,KAAL,CAAWQ,UAAX,GAAwBF,KAAxB;AACA;;AACJ,aAAK,IAAL;AACI,eAAKN,KAAL,CAAWS,UAAX,GAAwBH,KAAxB;AACA;;AACJ,aAAK,IAAL;AACI,eAAKN,KAAL,CAAWU,KAAX,GAAmBJ,KAAnB;AACA;;AACJ;AACI,eAAKV,cAAL,IAAuBQ,QAAvB;AAdR;AAgBH,KApBD;AAqBH;;AAzCa,C,CA2CV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAER,eAAeX,WAAf","sourcesContent":["'use strict'\n\nclass StyleReader {\n    constructor(className) {\n        this.className = className;\n        this._userClassName = '';\n        this._style = {}\n    }\n\n    get userClassName() {\n        this.decomposeClassName();\n        return this._userClassName;\n    }\n\n    get style() {\n        this.decomposeClassName();\n        return this._style;\n    }\n\n    decomposeClassName() {\n        const properties = this.className.split(' ');\n\n        properties.forEach(property => {\n            let propertyName = property.split(\"-\")[0];\n            let value = property.split(\"-\")[1];\n\n            switch (propertyName) {\n                case 'fs':\n                    this.style.fontSize = value;\n                    break;\n                case 'fw':\n                    this.style.fontWeight = value;\n                    break;\n                case 'bg':\n                    this.style.background = value;\n                    break;\n                case 'cl':\n                    this.style.color = value;\n                    break;\n                default:\n                    this._userClassName += property;\n            }\n        });\n    }\n}\n        // const properties = this.props.className.split(\" \");\n        //\n        // const colors = {\n        //     background: '',\n        //     color: ''\n        // }\n        //\n        // let size;\n        // let allUserClass = [];\n        // let text = this.props.children || \"Scooby Doo\";\n        //\n        // for (let property of properties) {\n        //     let propertyName = property.split(\"-\")[0];\n        //     let value = property.split(\"-\")[1];\n        //\n        //     if (propertyName === \"cl\") {\n        //         colors[\"color\"] = value;\n        //     } else if (propertyName === \"bg\") {\n        //         colors[\"background\"] = value;\n        //     } else if (propertyName === \"sz\") {\n        //         size = value.toLowerCase();\n        //     } else {\n        //         allUserClass.push(propertyName);\n        //     }\n        // }\n        //\n        // let fullClass;\n        //\n        // if (size === \"small\") {\n        //     fullClass = `${allUserClass.join(\" \")}buttonWaves buttonWaves_small`;\n        // } else if (size === \"medium\") {\n        //     fullClass = `${allUserClass.join(\" \")}buttonWaves buttonWaves_medium`;\n        // } else {\n        //     fullClass = `${allUserClass.join(\" \")}buttonWaves`;\n        // }\n        //\n        // return (<button className={`${fullClass}`} style={colors}>\n        //     <p>{text}</p>\n        //     <span className={\"buttonWaves__inner\"}>\n        //             <span className={\"buttonWaves__wave\"}/>\n        //             <span className={\"buttonWaves__wave\"}/>\n        //             <span className={\"buttonWaves__wave\"}/>\n        //             <span className={\"buttonWaves__wave\"}/>\n        //         </span>\n        // </button>);\n\nexport default StyleReader;"]},"metadata":{},"sourceType":"module"}