{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/InnerTree.js\";\nimport React, { Component } from 'react';\nimport list from '../list.json';\nimport './assets/css/InnerTree.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\";\nimport FileTreeElement from \"./FileTreeElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst folderOpen = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolderOpen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 20\n}, this);\n\nconst folderClose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolder\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\n\nconst arrowDown = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretDown\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 19\n}, this);\n\nconst arrowRight = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretRight\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 20\n}, this);\n\nconst fileIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_file\",\n  icon: faFileCode\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 18\n}, this);\n\nclass InnerTree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goDown = () => {\n      this.setState(state => ({\n        isActive: !state.isActive\n      }));\n    };\n\n    this.isActive = () => {\n      return this.state.isActive;\n    };\n\n    this.state = {\n      id: this.props.id + 1,\n      isActive: false\n    };\n  }\n\n  render() {\n    const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n    const folderIcon = this.isActive() ? folderOpen : folderClose;\n    const listPosition = list[this.props.id];\n    const {\n      pickComponent\n    } = this.props;\n\n    const innerTree = this.isActive() && /*#__PURE__*/_jsxDEV(InnerTree, {\n      id: this.state.id,\n      pickComponent: pickComponent,\n      visibility: this.props.visibility,\n      userComponent: this.props.userComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 46\n    }, this);\n\n    const dirElement = listPosition.dirs.map((dir, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"tree-element__dir\",\n      onClick: this.goDown,\n      children: [arrowIcon, folderIcon, dir]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)); // const fileElement = listPosition.files.map((file, index) => (\n    //     <div className={`tree-element__highlight`}>\n    //     <button className={\"tree-element__file\"}\n    //             key={index}\n    //             onClick={() => { pickComponent(file.slice(0, -3)) }}>\n    //         {fileIcon}\n    //         {file}\n    //     </button>\n    //     </div>\n    // ));\n\n    const fileElement = listPosition.files.map((file, index) => /*#__PURE__*/_jsxDEV(FileTreeElement, {\n      file: file,\n      index: index,\n      pickComponent: pickComponent,\n      userComponent: this.props.userComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-element\",\n      children: [dirElement, innerTree, fileElement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon };","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/InnerTree.js"],"names":["React","Component","list","FontAwesomeIcon","faFolder","faFolderOpen","faCaretRight","faCaretDown","faFileCode","FileTreeElement","folderOpen","folderClose","arrowDown","arrowRight","fileIcon","InnerTree","constructor","props","goDown","setState","state","isActive","id","render","arrowIcon","folderIcon","listPosition","pickComponent","innerTree","visibility","userComponent","dirElement","dirs","map","dir","index","fileElement","files","file"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport list from '../list.json'\nimport './assets/css/InnerTree.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\"\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\"\nimport FileTreeElement from \"./FileTreeElement\"\n\nconst folderOpen = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolderOpen}/>\nconst folderClose = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolder}/>\nconst arrowDown = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretDown}/>\nconst arrowRight = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretRight}/>\nconst fileIcon = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_file\" icon={faFileCode}/>\n\n\nclass InnerTree extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id + 1,\n            isActive: false\n        }\n    }\n\n    render () {\n        const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n        const folderIcon = this.isActive() ? folderOpen : folderClose;\n        const listPosition = list[this.props.id];\n        const { pickComponent } = this.props;\n\n        const innerTree = this.isActive() && <InnerTree id={this.state.id}\n                                                        pickComponent={pickComponent}\n                                                        visibility={this.props.visibility}\n                                                        userComponent={this.props.userComponent}/>\n\n        const dirElement = listPosition.dirs.map((dir, index) => (\n            <button className={\"tree-element__dir\"}\n                    key={index}\n                    onClick={this.goDown}>\n                {arrowIcon}\n                {folderIcon}\n                {dir}\n            </button>\n        ));\n\n        // const fileElement = listPosition.files.map((file, index) => (\n        //     <div className={`tree-element__highlight`}>\n        //     <button className={\"tree-element__file\"}\n        //             key={index}\n        //             onClick={() => { pickComponent(file.slice(0, -3)) }}>\n        //         {fileIcon}\n        //         {file}\n        //     </button>\n        //     </div>\n        // ));\n\n        const fileElement = listPosition.files.map((file, index) => (\n           <FileTreeElement file={file}\n                            index={index}\n                            pickComponent={pickComponent}\n                            userComponent={this.props.userComponent}/>\n        ));\n\n        return (\n            <div className=\"tree-element\">\n                {dirElement}\n                {innerTree}\n                {fileElement}\n            </div>\n        )\n    }\n\n     goDown = () => {\n        this.setState((state) => ({ isActive: !state.isActive }))\n    }\n\n    isActive = () => {\n        return this.state.isActive;\n    }\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon }"]},"metadata":{},"sourceType":"module"}