{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Data/Data.js\";\nimport React, { Component } from \"react\";\nimport \"./Data.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport { connect } from \"react-redux\";\nimport { dataKeyDown, dataPaste, maskForData } from \"./mask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Data extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: '',\n      type: 'text'\n    };\n\n    this.handleChange = event => {\n      const mask = event.target.dataset.mask;\n      maskForData(event, mask);\n\n      if (this.props.onChange) {\n        this.props.onChange();\n      }\n\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.onDataKeyDown = event => {\n      const mask = event.target.dataset.mask;\n      dataKeyDown(event, mask);\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.onDataPaste = event => {\n      const mask = event.target.dataset.mask;\n      event.preventDefault();\n      dataPaste(event, mask);\n      this.setState({\n        value: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      componentsState,\n      className,\n      formMask,\n      formPlaceholder,\n      id\n    } = this.props;\n    const componentStyle = componentsState && componentsState[\"Data\"];\n    let styleReader = new StyleReader(componentStyle);\n    const mask = formMask || componentStyle[\"mask\"] || \"99/99/9999\";\n    const placeholder = formPlaceholder || componentStyle[\"text\"] || \"Data\";\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: id,\n      placeholder: placeholder,\n      className: className + \" dataInput\",\n      style: styleReader.style,\n      \"data-mask\": mask,\n      onChange: this.handleChange,\n      onKeyDown: this.onDataKeyDown,\n      onPaste: this.onDataPaste,\n      value: this.state.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(Data);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Data/Data.js"],"names":["React","Component","StyleReader","connect","dataKeyDown","dataPaste","maskForData","Data","state","value","type","handleChange","event","mask","target","dataset","props","onChange","setState","onDataKeyDown","onDataPaste","preventDefault","render","componentsState","className","formMask","formPlaceholder","id","componentStyle","styleReader","placeholder","style","mapStateToProps","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,QAAlD;;;AAGA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBO,KADyB,GACjB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADiB;;AAAA,SA4BzBC,YA5ByB,GA4BTC,KAAD,IAAW;AACtB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,IAAlC;AACAP,MAAAA,WAAW,CAACM,KAAD,EAAQC,IAAR,CAAX;;AAEA,UAAI,KAAKG,KAAL,CAAWC,QAAf,EAAyB;AACrB,aAAKD,KAAL,CAAWC,QAAX;AACH;;AAED,WAAKC,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AADV,OAAd;AAGH,KAvCwB;;AAAA,SAyCzBU,aAzCyB,GAyCRP,KAAD,IAAW;AACvB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,IAAlC;AACAT,MAAAA,WAAW,CAACQ,KAAD,EAAQC,IAAR,CAAX;AACA,WAAKK,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AADV,OAAd;AAGH,KA/CwB;;AAAA,SAiDzBW,WAjDyB,GAiDVR,KAAD,IAAW;AACrB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBF,IAAlC;AACAD,MAAAA,KAAK,CAACS,cAAN;AACAhB,MAAAA,SAAS,CAACO,KAAD,EAAQC,IAAR,CAAT;AACA,WAAKK,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AADV,OAAd;AAGH,KAxDwB;AAAA;;AAMzBa,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,eAAD;AAAkBC,MAAAA,SAAlB;AAA6BC,MAAAA,QAA7B;AAAuCC,MAAAA,eAAvC;AAAwDC,MAAAA;AAAxD,QAA8D,KAAKX,KAAzE;AACA,UAAMY,cAAc,GAAGL,eAAe,IAAIA,eAAe,CAAC,MAAD,CAAzD;AACA,QAAIM,WAAW,GAAG,IAAI3B,WAAJ,CAAgB0B,cAAhB,CAAlB;AAEA,UAAMf,IAAI,GAAGY,QAAQ,IAAIG,cAAc,CAAC,MAAD,CAA1B,IAAsC,YAAnD;AACA,UAAME,WAAW,GAAGJ,eAAe,IAAIE,cAAc,CAAC,MAAD,CAAjC,IAA6C,MAAjE;AAEA,wBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACO,MAAA,EAAE,EAAED,EADX;AAEO,MAAA,WAAW,EAAEG,WAFpB;AAGO,MAAA,SAAS,EAAEN,SAAS,GAAG,YAH9B;AAIO,MAAA,KAAK,EAAEK,WAAW,CAACE,KAJ1B;AAKO,mBAAWlB,IALlB;AAMO,MAAA,QAAQ,EAAE,KAAKF,YANtB;AAOO,MAAA,SAAS,EAAE,KAAKQ,aAPvB;AAQO,MAAA,OAAO,EAAE,KAAKC,WARrB;AASO,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AATzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA1BwB;;AA2D7B,MAAMuB,eAAe,GAAIxB,KAAD,IAAW;AAC/B,SAAO;AACHe,IAAAA,eAAe,EAAEf,KAAK,CAACyB;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAe9B,OAAO,CAAC6B,eAAD,CAAP,CAAyBzB,IAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Data.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport {connect} from \"react-redux\";\nimport {dataKeyDown, dataPaste, maskForData} from \"./mask\";\n\n\nclass Data extends Component {\n    state = {\n        value: '',\n        type: 'text',\n    }\n\n    render() {\n        const {componentsState, className, formMask, formPlaceholder, id} = this.props;\n        const componentStyle = componentsState && componentsState[\"Data\"];\n        let styleReader = new StyleReader(componentStyle);\n\n        const mask = formMask || componentStyle[\"mask\"] || \"99/99/9999\";\n        const placeholder = formPlaceholder || componentStyle[\"text\"] || \"Data\";\n\n        return (\n            <input type=\"text\"\n                   id={id}\n                   placeholder={placeholder}\n                   className={className + \" dataInput\"}\n                   style={styleReader.style}\n                   data-mask={mask}\n                   onChange={this.handleChange}\n                   onKeyDown={this.onDataKeyDown}\n                   onPaste={this.onDataPaste}\n                   value={this.state.value}/>\n        );\n    }\n\n    handleChange = (event) => {\n        const mask = event.target.dataset.mask;\n        maskForData(event, mask);\n\n        if (this.props.onChange) {\n            this.props.onChange();\n        }\n\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    onDataKeyDown = (event) => {\n        const mask = event.target.dataset.mask;\n        dataKeyDown(event, mask);\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    onDataPaste = (event) => {\n        const mask = event.target.dataset.mask;\n        event.preventDefault();\n        dataPaste(event, mask);\n        this.setState({\n            value: event.target.value\n        })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(Data);"]},"metadata":{},"sourceType":"module"}