{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport '../assets/css/App.scss';\nimport Sidebar from \"./AppMenu/Sidebar\";\nimport Header from \"./AppMenu/Header\";\nimport ThemeContext from \"./ThemeControl/ThemeContext\";\nimport Workspace from \"./Workspace\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { setAppTheme } from \"../store/appTheme/actions\"; // Компонент App несет в себе функцию отображения всего приложения в целом\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    theme,\n    setAppTheme\n  } = props;\n  const [userComponents, setUserComponents] = useState([]);\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: \"http://127.0.0.1:8000/api/\"\n    }).then(response => {\n      const userComponents = response.data;\n      setUserComponents(userComponents);\n    });\n  }, [setUserComponents]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: setAppTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `app app_${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"app__menu\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"4bylw0jNrMf2TJGeLKRjQOE6/LY=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.appTheme.theme\n  };\n};\n\nconst mapDispatchToProps = {\n  setAppTheme\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/App.js"],"names":["React","useState","useEffect","Sidebar","Header","ThemeContext","Workspace","connect","axios","setAppTheme","App","props","theme","userComponents","setUserComponents","method","url","then","response","data","toggleTheme","mapStateToProps","state","appTheme","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,wBAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B,C,CAKA;;;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAM;AAACC,IAAAA,KAAD;AAAQH,IAAAA;AAAR,MAAuBE,KAA7B;AAEA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC;AACFO,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAML,cAAc,GAAGK,QAAQ,CAACC,IAAhC;AACAL,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACH,KAND;AAOH,GARQ,EAQN,CAACC,iBAAD,CARM,CAAT;AAWA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAG;AAAEF,MAAAA,KAAK,EAAEA,KAAT;AAAgBQ,MAAAA,WAAW,EAAEX;AAA7B,KAA/B;AAAA,2BACI;AAAM,MAAA,SAAS,EAAG,WAAUG,KAAM,EAAlC;AAAA,8BACI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA3BQF,G;;KAAAA,G;;AA6BT,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHV,IAAAA,KAAK,EAAEU,KAAK,CAACC,QAAN,CAAeX;AADnB,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B;AAIA,eAAeF,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '../assets/css/App.scss';\nimport Sidebar from \"./AppMenu/Sidebar\";\nimport Header from \"./AppMenu/Header\";\nimport ThemeContext from \"./ThemeControl/ThemeContext\";\nimport Workspace from \"./Workspace\";\nimport {connect} from \"react-redux\";\nimport axios from \"axios\";\nimport {setAppTheme} from \"../store/appTheme/actions\";\n\n\n\n\n// Компонент App несет в себе функцию отображения всего приложения в целом\nfunction App(props) {\n    const {theme, setAppTheme} = props;\n\n    const [userComponents, setUserComponents] = useState([]);\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://127.0.0.1:8000/api/\"\n        }).then(response => {\n            const userComponents = response.data\n            setUserComponents(userComponents)\n        })\n    }, [setUserComponents])\n\n\n    return (\n        <ThemeContext.Provider value={ { theme: theme, toggleTheme: setAppTheme } }>\n            <main className={`app app_${theme}`}>\n                <section className=\"app__menu\">\n                    <Header />\n                    <Sidebar />\n                </section>\n                <Workspace />\n            </main>\n        </ThemeContext.Provider>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.appTheme.theme,\n    }\n}\n\nconst mapDispatchToProps = {\n    setAppTheme\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}