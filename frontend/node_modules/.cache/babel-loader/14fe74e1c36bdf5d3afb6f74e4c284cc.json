{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/Workspace.js\";\nimport React from 'react';\nimport '../assets/css/Workspace.scss';\nimport * as components from \"../Hub\";\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Workspace extends React.Component {\n  render() {\n    const {\n      themeContext\n    } = this.props;\n    const {\n      userComponentName\n    } = this.props; // <<<<<<< HEAD\n\n    const Component = components[userComponentName];\n\n    const currentComponent = userComponentName && /*#__PURE__*/_jsxDEV(Component, {\n      className: \"\",\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 55\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workspace workspace_${themeContext}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace__content\",\n          children: currentComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ControlCenter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  } // =======\n  //         if (userComponentName !== \"\" && this.props.visibility) {\n  //             const Component = components[userComponentName]\n  //             return (\n  //                 <div className={`workspace workspace_${themeContext}`}>\n  //                     <Component className={\"\"}>Button</Component>\n  //                 </div>\n  //             )\n  //         } else {\n  //             return (\n  //                 <div className={`workspace workspace_${themeContext}`}/>\n  //             )\n  //         }\n  //     };\n  // >>>>>>> origin/main\n\n\n}\n\nexport default Workspace;","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/Workspace.js"],"names":["React","components","ControlCenter","Workspace","Component","render","themeContext","props","userComponentName","currentComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,QAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKC,KAA5B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKD,KAAjC,CAFK,CAGb;;AACQ,UAAMH,SAAS,GAAGH,UAAU,CAACO,iBAAD,CAA5B;;AACA,UAAMC,gBAAgB,GAAGD,iBAAiB,iBAAI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA9C;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAG,uBAAsBF,YAAa,EAApD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACKG;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAlBmC,CAmBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjCwC;;AAoCxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport '../assets/css/Workspace.scss'\nimport * as components from \"../Hub\"\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\n\nclass Workspace extends React.Component {\n    render() {\n        const {themeContext} = this.props;\n        const {userComponentName} = this.props;\n// <<<<<<< HEAD\n        const Component = components[userComponentName];\n        const currentComponent = userComponentName && <Component className={\"\"}>Button</Component>;\n\n        return (\n            <div className={`workspace workspace_${themeContext}`}>\n                <div className=\"workspace__inner\">\n                    <div className=\"workspace__content\">\n                        {currentComponent}\n                    </div>\n                    <ControlCenter/>\n                </div>\n            </div>\n        )\n    }\n// =======\n//         if (userComponentName !== \"\" && this.props.visibility) {\n//             const Component = components[userComponentName]\n//             return (\n//                 <div className={`workspace workspace_${themeContext}`}>\n//                     <Component className={\"\"}>Button</Component>\n//                 </div>\n//             )\n//         } else {\n//             return (\n//                 <div className={`workspace workspace_${themeContext}`}/>\n//             )\n//         }\n//     };\n// >>>>>>> origin/main\n}\n\nexport default Workspace;"]},"metadata":{},"sourceType":"module"}