{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Authorization/Login/Login.js\";\nimport React, { Component } from \"react\";\nimport \"../Login.css\";\nimport StyleReader from \"../../../../../utils/StyleReader\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      componentsState,\n      componentWithSync\n    } = this.props;\n    const condition = this.state.value === '' ? '' : 'filled';\n    let componentStyle;\n\n    if (componentWithSync) {\n      componentStyle = componentsState && componentsState[componentWithSync];\n    } else {\n      componentStyle = componentsState && componentsState[\"Login\"];\n    }\n\n    const styleReader = new StyleReader(componentStyle);\n    const label = componentStyle.text || \"Login\";\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styleReader.userClassName + \"login__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        className: \"login__input\",\n        placeholder: \"\",\n        value: this.state.value,\n        style: styleReader.style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `login__label login__label_${condition}`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Authorization/Login/Login.js"],"names":["React","Component","StyleReader","connect","Login","state","value","handleChange","event","setState","target","render","componentsState","componentWithSync","props","condition","componentStyle","styleReader","label","text","userClassName","style","mapStateToProps","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACJC,MAAAA,KAAK,EAAE;AADH,KADkB;;AAAA,SAgC1BC,YAhC0B,GAgCVC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEE,KAAK,CAACE,MAAN,CAAaJ;AADV,OAAd;AAGH,KApCyB;AAAA;;AAK1BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,QAAuC,KAAKC,KAAlD;AACA,UAAMC,SAAS,GAAG,KAAKV,KAAL,CAAWC,KAAX,KAAqB,EAArB,GAA0B,EAA1B,GAA+B,QAAjD;AACA,QAAIU,cAAJ;;AAEA,QAAIH,iBAAJ,EAAuB;AACnBG,MAAAA,cAAc,GAAGJ,eAAe,IAAIA,eAAe,CAACC,iBAAD,CAAnD;AACH,KAFD,MAEO;AACHG,MAAAA,cAAc,GAAGJ,eAAe,IAAIA,eAAe,CAAC,OAAD,CAAnD;AACH;;AAED,UAAMK,WAAW,GAAG,IAAIf,WAAJ,CAAgBc,cAAhB,CAApB;AACA,UAAME,KAAK,GAAGF,cAAc,CAACG,IAAf,IAAuB,OAArC;AAEA,wBACI;AAAM,MAAA,SAAS,EAAEF,WAAW,CAACG,aAAZ,GAA4B,cAA7C;AAAA,8BACI;AAAO,QAAA,IAAI,EAAE,MAAb;AACO,QAAA,QAAQ,EAAE,KAAKb,YADtB;AAEO,QAAA,SAAS,EAAE,cAFlB;AAGO,QAAA,WAAW,EAAC,EAHnB;AAIO,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAJzB;AAKO,QAAA,KAAK,EAAEW,WAAW,CAACI;AAL1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAO,QAAA,SAAS,EAAG,6BAA4BN,SAAU,EAAzD;AAAA,kBAA6DG;AAA7D;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9ByB;;AAuC9B,MAAMI,eAAe,GAAIjB,KAAD,IAAW;AAC/B,SAAO;AACHO,IAAAA,eAAe,EAAEP,KAAK,CAACkB;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,KAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"../Login.css\"\nimport StyleReader from \"../../../../../utils/StyleReader\";\nimport {connect} from \"react-redux\";\n\nclass Login extends Component {\n    state = {\n        value: \"\"\n    }\n\n    render() {\n        const {componentsState, componentWithSync} = this.props;\n        const condition = this.state.value === '' ? '' : 'filled'\n        let componentStyle;\n\n        if (componentWithSync) {\n            componentStyle = componentsState && componentsState[componentWithSync];\n        } else {\n            componentStyle = componentsState && componentsState[\"Login\"];\n        }\n\n        const styleReader = new StyleReader(componentStyle);\n        const label = componentStyle.text || \"Login\";\n\n        return (\n            <form className={styleReader.userClassName + \"login__group\"}>\n                <input type={\"text\"}\n                       onChange={this.handleChange}\n                       className={\"login__input\"}\n                       placeholder=\"\"\n                       value={this.state.value}\n                       style={styleReader.style}/>\n                <label className={`login__label login__label_${condition}`}>{label}</label>\n            </form>\n        )\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value\n        })\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}