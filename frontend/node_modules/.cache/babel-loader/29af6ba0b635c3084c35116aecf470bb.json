{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/StyleMenu/StyleMenu.js\";\nimport React, { Component } from 'react';\nimport '../../../assets/css/ControlCenter/InputForms.scss';\nimport FormTemplate from './Forms/FormTemplate';\nimport ResetBtn from \"./ResetBtn\";\nimport { connect } from \"react-redux\"; // StyleMenu отвечает за меню стилевых форм\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StyleMenu extends Component {\n  render() {\n    const {\n      componentsState,\n      componentName\n    } = this.props;\n    const componentStyle = componentsState[componentName];\n    let formsList = []; // проходится по каждому свойству объекта стилей компонента,\n    // на основе этих свойств формирует массив стилевых форм\n\n    for (let styleType in componentStyle) {\n      if (componentStyle.hasOwnProperty(styleType)) {\n        formsList.push( /*#__PURE__*/_jsxDEV(FormTemplate, {\n          styleType: styleType\n        }, styleType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 32\n        }, this));\n      }\n    } // рендерит формы и кнопку сброса стилей\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-menu__inner\",\n        children: formsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResetBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentName: state.currentComponent.componentName,\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(StyleMenu);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/StyleMenu/StyleMenu.js"],"names":["React","Component","FormTemplate","ResetBtn","connect","StyleMenu","render","componentsState","componentName","props","componentStyle","formsList","styleType","hasOwnProperty","push","mapStateToProps","state","currentComponent","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mDAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;;;AACA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,MAAM,GAAI;AACN,UAAM;AAACC,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB,QAAmC,KAAKC,KAA9C;AACA,UAAMC,cAAc,GAAGH,eAAe,CAACC,aAAD,CAAtC;AACA,QAAIG,SAAS,GAAG,EAAhB,CAHM,CAKN;AACA;;AACA,SAAK,IAAIC,SAAT,IAAsBF,cAAtB,EAAsC;AAClC,UAAKA,cAAc,CAACG,cAAf,CAA8BD,SAA9B,CAAL,EAAgD;AAC5CD,QAAAA,SAAS,CAACG,IAAV,eAAe,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEF;AAAzB,WACmBA,SADnB;AAAA;AAAA;AAAA;AAAA,gBAAf;AAEH;AACJ,KAZK,CAcN;;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBACKD;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxB6B;;AA2BlC,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,aAAa,EAAEQ,KAAK,CAACC,gBAAN,CAAuBT,aADnC;AAEHD,IAAAA,eAAe,EAAES,KAAK,CAACE;AAFpB,GAAP;AAIH,CALD;;AAOA,eAAed,OAAO,CAACW,eAAD,CAAP,CAAyBV,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../../assets/css/ControlCenter/InputForms.scss';\nimport FormTemplate from './Forms/FormTemplate';\nimport ResetBtn from \"./ResetBtn\";\nimport {connect} from \"react-redux\";\n\n// StyleMenu отвечает за меню стилевых форм\nclass StyleMenu extends Component {\n    render () {\n        const {componentsState, componentName} = this.props;\n        const componentStyle = componentsState[componentName];\n        let formsList = [];\n\n        // проходится по каждому свойству объекта стилей компонента,\n        // на основе этих свойств формирует массив стилевых форм\n        for (let styleType in componentStyle) {\n            if ( componentStyle.hasOwnProperty(styleType) ) {\n                formsList.push(<FormTemplate styleType={styleType}\n                                             key={styleType}/>)\n            }\n        }\n\n        // рендерит формы и кнопку сброса стилей\n        return (\n            <div className=\"control-menu\">\n                <div className=\"control-menu__inner\">\n                    {formsList}\n                </div>\n                <ResetBtn/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentName: state.currentComponent.componentName,\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(StyleMenu);\n"]},"metadata":{},"sourceType":"module"}