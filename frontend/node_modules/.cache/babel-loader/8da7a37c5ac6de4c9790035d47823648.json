{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/Library/Buttons/Waves/Waves.js\";\nimport React, { Component } from 'react';\nimport \"./Waves.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Waves extends Component {\n  render() {\n    const properties = this.props.className.split(\" \");\n    const colors = {\n      background: '',\n      color: ''\n    };\n\n    for (let property of properties) {\n      let propertyName = property.split(\"-\")[0];\n      let value = property.split(\"-\")[1];\n\n      if (propertyName === \"cl\") {\n        colors[\"color\"] = value;\n      } else if (propertyName === \"bg\") {\n        colors[\"background\"] = value;\n      } else if (propertyName === \"sz\") {}\n    }\n\n    const text = this.props.text ? this.props.text : \"Scooby Doo\";\n    const size = this.props.size;\n\n    if (size === \"small\") {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${this.props.classname} buttonWaves Small`,\n        style: colors,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"buttonWaves__inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    } else if (size === \"medium\") {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${this.props.classname} buttonWaves Medium`,\n        style: colors,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"buttonWaves__inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${this.props.classname} buttonWaves`,\n        style: colors,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"buttonWaves__inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttonWaves__wave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default Waves;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/Library/Buttons/Waves/Waves.js"],"names":["React","Component","Waves","render","properties","props","className","split","colors","background","color","property","propertyName","value","text","size","classname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport \"./Waves.css\"\n\nclass Waves extends Component {\n    render() {\n        const properties = this.props.className.split(\" \");\n        const colors = {background: '',\n                        color: ''}\n        for (let property of properties) {\n            let propertyName = property.split(\"-\")[0];\n            let value = property.split(\"-\")[1];\n            if (propertyName === \"cl\") {\n                colors[\"color\"] = value;\n            } else if (propertyName === \"bg\") {\n                colors[\"background\"] = value;\n            } else if (propertyName === \"sz\") {\n                \n            }\n        }\n        const text = this.props.text ? this.props.text : \"Scooby Doo\";\n        const size = this.props.size;\n        if (size === \"small\") {\n            return (<button className={`${this.props.classname} buttonWaves Small`} style={colors}>\n                <p>{text}</p>\n                <span className={\"buttonWaves__inner\"}>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                </span>\n            </button>);\n        } else if (size === \"medium\") {\n            return (<button className={`${this.props.classname} buttonWaves Medium`} style={colors}>\n                <p>{text}</p>\n                <span className={\"buttonWaves__inner\"}>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                </span>\n            </button>);\n        } else {\n            return (<button className={`${this.props.classname} buttonWaves`} style={colors}>\n                <p>{text}</p>\n                <span className={\"buttonWaves__inner\"}>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                    <span className={\"buttonWaves__wave\"}></span>\n                </span>\n            </button>);\n        }\n    }\n}\n\nexport default Waves;"]},"metadata":{},"sourceType":"module"}