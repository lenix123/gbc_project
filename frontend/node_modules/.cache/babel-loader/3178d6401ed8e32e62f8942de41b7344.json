{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/ThemeContext.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Provider,\n  Consumer\n} = /*#__PURE__*/React.createContext();\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: \"dark\"\n    };\n\n    this.toggleTheme = () => {\n      this.setState(prevState => {\n        return {\n          theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      value: {\n        theme: this.state.theme,\n        toggleTheme: this.toggleTheme\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer };","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/ThemeContext.js"],"names":["React","Component","Provider","Consumer","createContext","ThemeContextProvider","state","theme","toggleTheme","setState","prevState","render","props","children","ThemeContextConsumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,iBAAyBH,KAAK,CAACI,aAAN,EAA/B;;AAEA,MAAMC,oBAAN,SAAmCJ,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCK,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;;AAAA,SAKzCC,WALyC,GAK3B,MAAM;AAChB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AACHH,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;AAD3C,SAAP;AAGH,OAJD;AAKH,KAXwC;AAAA;;AAazCI,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AACI,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApB;AAA2BC,QAAAA,WAAW,EAAE,KAAKA;AAA7C,OADX;AAAA,gBAGK,KAAKI,KAAL,CAAWC;AAHhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AArBwC;;AAwB7C,SAASR,oBAAT,EAA+BF,QAAQ,IAAIW,oBAA3C","sourcesContent":["import React, { Component } from \"react\";\nconst { Provider, Consumer } = React.createContext();\n\nclass ThemeContextProvider extends Component {\n    state = {\n        theme: \"dark\"\n    };\n\n    toggleTheme = () => {\n        this.setState(prevState => {\n            return {\n                theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n            };\n        });\n    };\n\n    render() {\n        return (\n            <Provider\n                value={{ theme: this.state.theme, toggleTheme: this.toggleTheme }}\n            >\n                {this.props.children}\n            </Provider>\n        );\n    }\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer };\n"]},"metadata":{},"sourceType":"module"}