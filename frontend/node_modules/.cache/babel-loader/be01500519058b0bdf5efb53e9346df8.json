{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/StyleMenu/Forms/FormTemplate.js\";\nimport React from 'react';\nimport DropdownForm from \"./InputForms/DropdownForm\";\nimport TextForm from \"./InputForms/TextForm\";\nimport NumberForm from \"./InputForms/NumberForm\";\nimport ColorForm from \"./InputForms/ColorForm\"; // FormTemplate - шаблон, в зависимости от пропсов которого, выбирается нужная форма\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormTemplate(props) {\n  const {\n    styleType,\n    getStyles,\n    componentStyle\n  } = props;\n  let form; // по типу (стилю) формы выбирает нужную из списка\n\n  switch (styleType) {\n    // размер шрифта (font-size)\n    case 'fs':\n      form = /*#__PURE__*/_jsxDEV(NumberForm, {\n        label: \"Font Size\",\n        styleType: 'fs'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n      break;\n    // ширина границы (border-width)\n\n    case 'bw':\n      form = /*#__PURE__*/_jsxDEV(NumberForm, {\n        label: \"Border Width\",\n        styleType: 'bw'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n      break;\n    // цвет фона (background)\n\n    case 'bg':\n      form = /*#__PURE__*/_jsxDEV(ColorForm, {\n        label: \"Background\",\n        styleType: 'bg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n      break;\n    // цвет шрифта (color)\n\n    case 'cl':\n      form = /*#__PURE__*/_jsxDEV(ColorForm, {\n        label: \"Color\",\n        styleType: 'cl'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n      break;\n    // цвет границы (border-color)\n\n    case 'bc':\n      form = /*#__PURE__*/_jsxDEV(ColorForm, {\n        label: \"Border Color\",\n        styleType: 'bc'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n      break;\n    // ширина обводки (outline width)\n\n    case 'ow':\n      form = /*#__PURE__*/_jsxDEV(NumberForm, {\n        label: \"Outline Width\",\n        styleType: 'ow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n      break;\n    // цвет обводки (outline color)\n\n    case 'oc':\n      form = /*#__PURE__*/_jsxDEV(ColorForm, {\n        label: \"Outline Color\",\n        styleType: 'oc'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n      break;\n    // цвет текста при наведении на компонент\n\n    case 'clh':\n      form = /*#__PURE__*/_jsxDEV(ColorForm, {\n        label: \"Color on hover\",\n        styleType: 'clh'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n      break;\n    // толщина шрифта (font-weight)\n\n    case 'fw':\n      const fontWeight = [\"Light\", \"Regular\", \"Bold\"];\n      form = /*#__PURE__*/_jsxDEV(DropdownForm, {\n        label: \"Font weight\",\n        elements: fontWeight,\n        styleType: 'fw'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n      break;\n    // ширина компонента (width)\n\n    case 'wd':\n      form = /*#__PURE__*/_jsxDEV(NumberForm, {\n        label: \"Width\",\n        styleType: 'wd'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this);\n      break;\n    // закругление краев (border-radius)\n\n    case 'br':\n      form = /*#__PURE__*/_jsxDEV(NumberForm, {\n        label: \"Border Radius\",\n        styleType: 'br'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n      break;\n    // тип ввода формы\n\n    case 'type':\n      const types = [\"Email\", \"Telephone\", \"Login\"];\n      form = /*#__PURE__*/_jsxDEV(DropdownForm, {\n        label: \"Type\",\n        elements: types,\n        styleType: 'type'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }, this);\n      break;\n    // выбор кнокпи компонента\n\n    case 'btn':\n      const buttons = [\"Classic\", \"Waves\", \"Outline\"];\n      form = /*#__PURE__*/_jsxDEV(DropdownForm, {\n        label: \"Button\",\n        elements: buttons,\n        styleType: 'btn'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }, this);\n      break;\n    // выбор синхранизации стилей форм\n\n    case 'sync':\n      const sync = [\"None\", \"Login\", \"Pass\"];\n      form = /*#__PURE__*/_jsxDEV(DropdownForm, {\n        label: \"Synchronize\",\n        elements: sync,\n        styleType: 'sync'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n      break;\n    // текстовое поле компонента\n\n    case 'text':\n      form = /*#__PURE__*/_jsxDEV(TextForm, {\n        label: \"Text\",\n        styleType: 'text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n      break;\n    // поля для ввода маски для формы\n\n    case 'mask':\n      form = /*#__PURE__*/_jsxDEV(TextForm, {\n        label: \"Mask\",\n        styleType: 'mask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 20\n      }, this);\n      break;\n    // адрес картинки\n\n    case 'url':\n      form = /*#__PURE__*/_jsxDEV(TextForm, {\n        label: \"Image URL\",\n        styleType: 'url'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n  }\n\n  return form;\n}\n\n_c = FormTemplate;\nexport default FormTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTemplate\");","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/StyleMenu/Forms/FormTemplate.js"],"names":["React","DropdownForm","TextForm","NumberForm","ColorForm","FormTemplate","props","styleType","getStyles","componentStyle","form","fontWeight","types","buttons","sync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAyCH,KAA/C;AACA,MAAII,IAAJ,CAFyB,CAIzB;;AACA,UAAQH,SAAR;AACI;AACA,SAAK,IAAL;AACIG,MAAAA,IAAI,gBAAG,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,WAAnB;AACY,QAAA,SAAS,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,cAAnB;AACY,QAAA,SAAS,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,YAAlB;AACW,QAAA,SAAS,EAAE;AADtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,OAAlB;AACW,QAAA,SAAS,EAAE;AADtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,cAAlB;AACW,QAAA,SAAS,EAAE;AADtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,eAAnB;AACY,QAAA,SAAS,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,eAAlB;AACW,QAAA,SAAS,EAAE;AADtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,KAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,gBAAlB;AACW,QAAA,SAAS,EAAE;AADtB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACI,YAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAAnB;AACAD,MAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,aAArB;AACc,QAAA,QAAQ,EAAEC,UADxB;AAEc,QAAA,SAAS,EAAE;AAFzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGA;AACJ;;AACA,SAAK,IAAL;AACID,MAAAA,IAAI,gBAAG,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,OAAnB;AACY,QAAA,SAAS,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,IAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,eAAnB;AACY,QAAA,SAAS,EAAE;AADvB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,MAAL;AACI,YAAME,KAAK,GAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,OAAvB,CAAd;AACAF,MAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,MAArB;AACc,QAAA,QAAQ,EAAEE,KADxB;AAEc,QAAA,SAAS,EAAE;AAFzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGA;AACJ;;AACA,SAAK,KAAL;AACI,YAAMC,OAAO,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,CAAhB;AACAH,MAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,QAArB;AACc,QAAA,QAAQ,EAAEG,OADxB;AAEc,QAAA,SAAS,EAAE;AAFzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGA;AACJ;;AACA,SAAK,MAAL;AACI,YAAMC,IAAI,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAb;AACAJ,MAAAA,IAAI,gBAAG,QAAC,YAAD;AAAc,QAAA,KAAK,EAAE,aAArB;AACc,QAAA,QAAQ,EAAEI,IADxB;AAEc,QAAA,SAAS,EAAE;AAFzB;AAAA;AAAA;AAAA;AAAA,cAAP;AAGA;AACJ;;AACA,SAAK,MAAL;AACIJ,MAAAA,IAAI,gBAAG,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,MAAjB;AACU,QAAA,SAAS,EAAE;AADrB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,MAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,MAAjB;AACU,QAAA,SAAS,EAAE;AADrB;AAAA;AAAA;AAAA;AAAA,cAAP;AAEA;AACJ;;AACA,SAAK,KAAL;AACIA,MAAAA,IAAI,gBAAG,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,WAAjB;AACU,QAAA,SAAS,EAAE;AADrB;AAAA;AAAA;AAAA;AAAA,cAAP;AA3FR;;AA+FA,SACIA,IADJ;AAGH;;KAvGQL,Y;AAyGT,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport DropdownForm from \"./InputForms/DropdownForm\";\nimport TextForm from \"./InputForms/TextForm\";\nimport NumberForm from \"./InputForms/NumberForm\";\nimport ColorForm from \"./InputForms/ColorForm\";\n\n// FormTemplate - шаблон, в зависимости от пропсов которого, выбирается нужная форма\nfunction FormTemplate(props) {\n    const {styleType, getStyles, componentStyle} = props;\n    let form;\n\n    // по типу (стилю) формы выбирает нужную из списка\n    switch (styleType) {\n        // размер шрифта (font-size)\n        case 'fs':\n            form = <NumberForm label={\"Font Size\"}\n                               styleType={'fs'}/>\n            break;\n        // ширина границы (border-width)\n        case 'bw':\n            form = <NumberForm label={\"Border Width\"}\n                               styleType={'bw'}/>\n            break;\n        // цвет фона (background)\n        case 'bg':\n            form = <ColorForm label={\"Background\"}\n                              styleType={'bg'}/>\n            break;\n        // цвет шрифта (color)\n        case 'cl':\n            form = <ColorForm label={\"Color\"}\n                              styleType={'cl'}/>\n            break;\n        // цвет границы (border-color)\n        case 'bc':\n            form = <ColorForm label={\"Border Color\"}\n                              styleType={'bc'}/>\n            break;\n        // ширина обводки (outline width)\n        case 'ow':\n            form = <NumberForm label={\"Outline Width\"}\n                               styleType={'ow'}/>\n            break;\n        // цвет обводки (outline color)\n        case 'oc':\n            form = <ColorForm label={\"Outline Color\"}\n                              styleType={'oc'}/>\n            break;\n        // цвет текста при наведении на компонент\n        case 'clh':\n            form = <ColorForm label={\"Color on hover\"}\n                              styleType={'clh'}/>\n            break;\n        // толщина шрифта (font-weight)\n        case 'fw':\n            const fontWeight = [\"Light\", \"Regular\", \"Bold\"];\n            form = <DropdownForm label={\"Font weight\"}\n                                 elements={fontWeight}\n                                 styleType={'fw'}/>\n            break;\n        // ширина компонента (width)\n        case 'wd':\n            form = <NumberForm label={\"Width\"}\n                               styleType={'wd'}/>\n            break;\n        // закругление краев (border-radius)\n        case 'br':\n            form = <NumberForm label={\"Border Radius\"}\n                               styleType={'br'}/>\n            break;\n        // тип ввода формы\n        case 'type':\n            const types = [\"Email\", \"Telephone\", \"Login\"];\n            form = <DropdownForm label={\"Type\"}\n                                 elements={types}\n                                 styleType={'type'}/>\n            break;\n        // выбор кнокпи компонента\n        case 'btn':\n            const buttons = [\"Classic\", \"Waves\", \"Outline\"];\n            form = <DropdownForm label={\"Button\"}\n                                 elements={buttons}\n                                 styleType={'btn'}/>\n            break;\n        // выбор синхранизации стилей форм\n        case 'sync':\n            const sync = [\"None\", \"Login\", \"Pass\"];\n            form = <DropdownForm label={\"Synchronize\"}\n                                 elements={sync}\n                                 styleType={'sync'}/>\n            break;\n        // текстовое поле компонента\n        case 'text':\n            form = <TextForm label={\"Text\"}\n                             styleType={'text'}/>\n            break;\n        // поля для ввода маски для формы\n        case 'mask':\n            form = <TextForm label={\"Mask\"}\n                             styleType={'mask'}/>\n            break;\n        // адрес картинки\n        case 'url':\n            form = <TextForm label={\"Image URL\"}\n                             styleType={'url'}/>\n        }\n\n    return (\n        form\n    );\n}\n\nexport default FormTemplate;"]},"metadata":{},"sourceType":"module"}