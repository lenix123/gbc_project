{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/FileTreeElement.js\";\nimport React, { Component } from 'react';\nimport { fileIcon } from './InnerTree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileTreeElement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPicked: false\n    };\n\n    this.changeCondition = () => {};\n  }\n\n  render() {\n    const {\n      pickComponent\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-element__highlight`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tree-element__file\",\n        onClick: () => {\n          pickComponent(this.props.file.slice(0, -3));\n        },\n        children: [fileIcon, this.props.file]\n      }, this.props.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const fileElement = listPosition.files.map((file, index) => (\n//     <div className={`tree-element__highlight_${this.props.visibility}`}>\n//         <button className={\"tree-element__file\"}\n//                 key={index}\n//                 onClick={() => { pickComponent(file.slice(0, -3)) }}>\n//             {fileIcon}\n//             {file}\n//         </button>\n//     </div>\n\n\nexport default FileTreeElement;","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/FileTreeElement.js"],"names":["React","Component","fileIcon","FileTreeElement","state","isPicked","changeCondition","render","pickComponent","props","file","slice","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD4B;;AAAA,SAoBpCC,eApBoC,GAoBlB,MAAM,CAEvB,CAtBmC;AAAA;;AAKpCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAkB,KAAKC,KAA7B;AAEA,wBACI;AAAK,MAAA,SAAS,EAAG,yBAAjB;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAE,oBAAnB;AAEQ,QAAA,OAAO,EAAE,MAAM;AAAED,UAAAA,aAAa,CAAC,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAD,CAAb;AAA6C,SAFtE;AAAA,mBAGKT,QAHL,EAIK,KAAKO,KAAL,CAAWC,IAJhB;AAAA,SACa,KAAKD,KAAL,CAAWG,KADxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlBmC,C,CAyBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,eAAf","sourcesContent":["import React, {Component} from 'react'\nimport { fileIcon } from './InnerTree'\n\nclass FileTreeElement extends Component {\n    state = {\n        isPicked: false\n    }\n\n    render() {\n        const {pickComponent} = this.props;\n\n        return (\n            <div className={`tree-element__highlight`}>\n                <button className={\"tree-element__file\"}\n                        key={this.props.index}\n                        onClick={() => { pickComponent(this.props.file.slice(0, -3)) }}>\n                    {fileIcon}\n                    {this.props.file}\n                </button>\n             </div>\n        )\n    }\n\n    changeCondition = () => {\n        \n    }\n}\n\n// const fileElement = listPosition.files.map((file, index) => (\n//     <div className={`tree-element__highlight_${this.props.visibility}`}>\n//         <button className={\"tree-element__file\"}\n//                 key={index}\n//                 onClick={() => { pickComponent(file.slice(0, -3)) }}>\n//             {fileIcon}\n//             {file}\n//         </button>\n//     </div>\n\nexport default FileTreeElement;"]},"metadata":{},"sourceType":"module"}