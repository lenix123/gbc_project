{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/ExportMenu/CopyButton.js\";\nimport React from \"react\";\nimport \"../../../assets/css/ControlCenter/Instruction.scss\"; // кнопка CopyButton копирует переданный текст в буфер обмена\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CopyButton extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      textButton: \"Copy\",\n      isDisabled: false\n    };\n\n    this.copyToClipboard = () => {\n      let text = this.props.text; // создаём текстовое поле и записываем туда text\n\n      let el = document.createElement('textarea');\n      el.value = text; // добавляем текстовое поле в DOM\n\n      document.body.appendChild(el); // выделяем и копируем текст\n\n      el.select();\n      document.execCommand('copy'); // удаляем текстовое поле из DOM\n\n      document.body.removeChild(el); // меняем состояние кнопки\n\n      this.setState({\n        textButton: \"Copied\",\n        isDisabled: true\n      });\n      setTimeout(this.backCopy, 1000);\n    };\n\n    this.backCopy = () => {\n      this.setState({\n        textButton: \"Copy\",\n        isDisabled: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: this.state.isDisabled,\n      onClick: this.copyToClipboard,\n      className: \"instruction__button\",\n      children: this.state.textButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } // функция copyToClipboard() копирует текст в буфер обмена\n\n\n}\n\nexport default CopyButton;","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/ExportMenu/CopyButton.js"],"names":["React","CopyButton","Component","state","textButton","isDisabled","copyToClipboard","text","props","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","setState","setTimeout","backCopy","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oDAAP,C,CAEA;;;;AACA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,UAAU,EAAE,MADR;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAD6B;;AAAA,SAiBrCC,eAjBqC,GAiBnB,MAAM;AACpB,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB,CADoB,CAEpB;;AACA,UAAIE,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAT;AACAF,MAAAA,EAAE,CAACG,KAAH,GAAWL,IAAX,CAJoB,CAKpB;;AACAG,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,EAA1B,EANoB,CAOpB;;AACAA,MAAAA,EAAE,CAACM,MAAH;AACAL,MAAAA,QAAQ,CAACM,WAAT,CAAqB,MAArB,EAToB,CAUpB;;AACAN,MAAAA,QAAQ,CAACG,IAAT,CAAcI,WAAd,CAA0BR,EAA1B,EAXoB,CAapB;;AACA,WAAKS,QAAL,CAAc;AACVd,QAAAA,UAAU,EAAE,QADF;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAAd;AAKAc,MAAAA,UAAU,CAAC,KAAKC,QAAN,EAAgB,IAAhB,CAAV;AACH,KArCoC;;AAAA,SAwCrCA,QAxCqC,GAwC1B,MAAM;AACb,WAAKF,QAAL,CAAc;AACVd,QAAAA,UAAU,EAAE,MADF;AAEVC,QAAAA,UAAU,EAAE;AAFF,OAAd;AAIH,KA7CoC;AAAA;;AAMrCgB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWE,UAA7B;AACQ,MAAA,OAAO,EAAE,KAAKC,eADtB;AAEQ,MAAA,SAAS,EAAE,qBAFnB;AAAA,gBAGK,KAAKH,KAAL,CAAWC;AAHhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GAdoC,CAgBrC;;;AAhBqC;;AAgDzC,eAAeH,UAAf","sourcesContent":["import React from \"react\";\nimport \"../../../assets/css/ControlCenter/Instruction.scss\";\n\n// кнопка CopyButton копирует переданный текст в буфер обмена\nclass CopyButton extends React.Component {\n    state = {\n        textButton: \"Copy\",\n        isDisabled: false\n    }\n\n    render() {\n        return (\n            <button disabled={this.state.isDisabled}\n                    onClick={this.copyToClipboard}\n                    className={\"instruction__button\"}>\n                {this.state.textButton}\n            </button>\n        );\n    }\n\n    // функция copyToClipboard() копирует текст в буфер обмена\n    copyToClipboard = () => {\n        let text = this.props.text;\n        // создаём текстовое поле и записываем туда text\n        let el = document.createElement('textarea');\n        el.value = text;\n        // добавляем текстовое поле в DOM\n        document.body.appendChild(el);\n        // выделяем и копируем текст\n        el.select();\n        document.execCommand('copy');\n        // удаляем текстовое поле из DOM\n        document.body.removeChild(el);\n\n        // меняем состояние кнопки\n        this.setState({\n            textButton: \"Copied\",\n            isDisabled: true\n        })\n\n        setTimeout(this.backCopy, 1000)\n    }\n\n    // функция backCopy() возвращает кнопку в исходное состояние\n    backCopy = () => {\n        this.setState({\n            textButton: \"Copy\",\n            isDisabled: false\n        })\n    }\n}\n\nexport default CopyButton;"]},"metadata":{},"sourceType":"module"}