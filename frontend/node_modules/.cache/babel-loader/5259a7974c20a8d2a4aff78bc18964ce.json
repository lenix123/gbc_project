{"ast":null,"code":"var _jsxFileName = \"/home/rewsage/WebstormProjects/gbc/src/components/App-menu/InnerTree.js\";\nimport React, { Component } from 'react';\nimport list from '../../list.json';\nimport '../assets/css/InnerTree.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\";\nimport FileBtn from \"./FileBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst folderOpen = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolderOpen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 20\n}, this);\n\nconst folderClose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolder\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 21\n}, this);\n\nconst arrowDown = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretDown\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 19\n}, this);\n\nconst arrowRight = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretRight\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 20\n}, this);\n\nconst fileIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_file\",\n  icon: faFileCode\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 18\n}, this);\n\nclass InnerTree extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goDown = () => {\n      this.setState(state => ({\n        isActive: !state.isActive\n      }));\n    };\n\n    this.isActive = () => {\n      return this.state.isActive;\n    };\n\n    this.state = {\n      id: this.props.id + 1,\n      isActive: false\n    };\n  }\n\n  render() {\n    const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n    const folderIcon = this.isActive() ? folderOpen : folderClose;\n    const listPosition = list[this.props.id];\n\n    const innerTree = this.isActive() && /*#__PURE__*/_jsxDEV(InnerTree, {\n      id: this.state.id,\n      callComponent: this.props.callComponent,\n      userComponentName: this.props.userComponentName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 46\n    }, this);\n\n    const dirBtn = listPosition.dirs.map((dir, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"tree-element__dir\",\n      onClick: this.goDown,\n      children: [arrowIcon, folderIcon, dir]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this));\n    const fileBtn = listPosition.files.map((file, index) => /*#__PURE__*/_jsxDEV(FileBtn, {\n      file: file,\n      index: index,\n      callComponent: this.props.callComponent,\n      userComponentName: this.props.userComponentName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-element\",\n      children: [dirBtn, innerTree, fileBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon };","map":{"version":3,"sources":["/home/rewsage/WebstormProjects/gbc/src/components/App-menu/InnerTree.js"],"names":["React","Component","list","FontAwesomeIcon","faFolder","faFolderOpen","faCaretRight","faCaretDown","faFileCode","FileBtn","folderOpen","folderClose","arrowDown","arrowRight","fileIcon","InnerTree","constructor","props","goDown","setState","state","isActive","id","render","arrowIcon","folderIcon","listPosition","innerTree","callComponent","userComponentName","dirBtn","dirs","map","dir","index","fileBtn","files","file"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport list from '../../list.json'\nimport '../assets/css/InnerTree.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\"\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\"\nimport FileBtn from \"./FileBtn\"\n\nconst folderOpen = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolderOpen}/>\nconst folderClose = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolder}/>\nconst arrowDown = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretDown}/>\nconst arrowRight = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretRight}/>\nconst fileIcon = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_file\" icon={faFileCode}/>\n\n\nclass InnerTree extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id + 1,\n            isActive: false\n        }\n    }\n\n    render () {\n        const arrowIcon = this.isActive() ? arrowDown : arrowRight;\n        const folderIcon = this.isActive() ? folderOpen : folderClose;\n        const listPosition = list[this.props.id];\n\n        const innerTree = this.isActive() && <InnerTree id={this.state.id}\n                                                        callComponent={this.props.callComponent}\n                                                        userComponentName={this.props.userComponentName}/>\n\n        const dirBtn = listPosition.dirs.map((dir, index) => (\n            <button className={\"tree-element__dir\"}\n                    key={index}\n                    onClick={this.goDown}>\n                {arrowIcon}\n                {folderIcon}\n                {dir}\n            </button>\n        ));\n\n        const fileBtn = listPosition.files.map((file, index) => (\n           <FileBtn file={file}\n                    index={index}\n                    callComponent={this.props.callComponent}\n                    userComponentName={this.props.userComponentName}/>\n        ));\n\n        return (\n            <div className=\"tree-element\">\n                {dirBtn}\n                {innerTree}\n                {fileBtn}\n            </div>\n        )\n    }\n\n     goDown = () => {\n        this.setState((state) => ({ isActive: !state.isActive }))\n    }\n\n    isActive = () => {\n        return this.state.isActive;\n    }\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon }"]},"metadata":{},"sourceType":"module"}