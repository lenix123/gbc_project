{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Entry/Entry.js\";\nimport React, { Component } from \"react\";\nimport \"./Entry.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport * as components from \"../../../../utils/Hub\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Entry extends Component {\n  render() {\n    const {\n      componentsState\n    } = this.props;\n    const componentStyle = componentsState && componentsState[\"Entry\"];\n    const formType = componentStyle.type || \"Email\";\n    const Authorization = components[formType];\n    const Password = components[\"Password\"];\n    const styleReader = new StyleReader(componentStyle);\n    const entryName = componentStyle.text || \"Sign in\";\n    const buttonName = componentStyle.btn || \"Classic\";\n    const buttonText = componentsState[buttonName].text;\n    const Button = components[buttonName];\n    const sync = componentStyle.sync || \"None\";\n    let componentWithSync;\n\n    if (sync === \"Login\") {\n      componentWithSync = formType;\n    } else if (sync === \"Pass\") {\n      componentWithSync = \"Password\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleReader.userClassName + \" entry\",\n      style: styleReader.style,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"entry__title\",\n        children: entryName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Authorization, {\n        componentsState: componentsState,\n        componentWithSync: componentWithSync\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        componentsState: componentsState,\n        componentWithSync: componentWithSync\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        componentsState: componentsState,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(Entry);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/Entry/Entry.js"],"names":["React","Component","StyleReader","components","connect","Entry","render","componentsState","props","componentStyle","formType","type","Authorization","Password","styleReader","entryName","text","buttonName","btn","buttonText","Button","sync","componentWithSync","userClassName","style","mapStateToProps","state","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,UAAZ,MAA4B,uBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAoB,KAAKC,KAA/B;AACA,UAAMC,cAAc,GAAGF,eAAe,IAAIA,eAAe,CAAC,OAAD,CAAzD;AACA,UAAMG,QAAQ,GAAGD,cAAc,CAACE,IAAf,IAAuB,OAAxC;AACA,UAAMC,aAAa,GAAGT,UAAU,CAACO,QAAD,CAAhC;AACA,UAAMG,QAAQ,GAAGV,UAAU,CAAC,UAAD,CAA3B;AAEA,UAAMW,WAAW,GAAG,IAAIZ,WAAJ,CAAgBO,cAAhB,CAApB;AACA,UAAMM,SAAS,GAAGN,cAAc,CAACO,IAAf,IAAuB,SAAzC;AAEA,UAAMC,UAAU,GAAGR,cAAc,CAACS,GAAf,IAAsB,SAAzC;AACA,UAAMC,UAAU,GAAGZ,eAAe,CAACU,UAAD,CAAf,CAA4BD,IAA/C;AACA,UAAMI,MAAM,GAAGjB,UAAU,CAACc,UAAD,CAAzB;AAEA,UAAMI,IAAI,GAAGZ,cAAc,CAACY,IAAf,IAAuB,MAApC;AACA,QAAIC,iBAAJ;;AAEA,QAAID,IAAI,KAAK,OAAb,EAAsB;AAClBC,MAAAA,iBAAiB,GAAGZ,QAApB;AACH,KAFD,MAEO,IAAIW,IAAI,KAAK,MAAb,EAAqB;AACxBC,MAAAA,iBAAiB,GAAG,UAApB;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAER,WAAW,CAACS,aAAZ,GAA4B,QAA5C;AACM,MAAA,KAAK,EAAET,WAAW,CAACU,KADzB;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAE,cAAf;AAAA,kBAAgCT;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,aAAD;AAAe,QAAA,eAAe,EAAER,eAAhC;AACe,QAAA,iBAAiB,EAAEe;AADlC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,QAAD;AAAU,QAAA,eAAe,EAAEf,eAA3B;AACU,QAAA,iBAAiB,EAAEe;AAD7B;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI,QAAC,MAAD;AAAQ,QAAA,eAAe,EAAEf,eAAzB;AAAA,kBACKY;AADL;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AArCyB;;AAwC9B,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHnB,IAAAA,eAAe,EAAEmB,KAAK,CAACC;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAevB,OAAO,CAACqB,eAAD,CAAP,CAAyBpB,KAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Entry.css\"\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport * as components from \"../../../../utils/Hub\";\nimport {connect} from \"react-redux\";\n\nclass Entry extends Component {\n    render() {\n        const {componentsState} = this.props;\n        const componentStyle = componentsState && componentsState[\"Entry\"];\n        const formType = componentStyle.type || \"Email\";\n        const Authorization = components[formType];\n        const Password = components[\"Password\"];\n\n        const styleReader = new StyleReader(componentStyle);\n        const entryName = componentStyle.text || \"Sign in\";\n\n        const buttonName = componentStyle.btn || \"Classic\";\n        const buttonText = componentsState[buttonName].text;\n        const Button = components[buttonName];\n\n        const sync = componentStyle.sync || \"None\";\n        let componentWithSync;\n\n        if (sync === \"Login\") {\n            componentWithSync = formType;\n        } else if (sync === \"Pass\") {\n            componentWithSync = \"Password\";\n        }\n\n        return (\n            <div className={styleReader.userClassName + \" entry\"}\n                  style={styleReader.style}>\n                <h1 className={\"entry__title\"}>{entryName}</h1>\n                <Authorization componentsState={componentsState}\n                               componentWithSync={componentWithSync}/>\n                <Password componentsState={componentsState}\n                          componentWithSync={componentWithSync}/>\n                <Button componentsState={componentsState}>\n                    {buttonText}\n                </Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(Entry);"]},"metadata":{},"sourceType":"module"}