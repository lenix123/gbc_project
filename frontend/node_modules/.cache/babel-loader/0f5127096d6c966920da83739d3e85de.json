{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/Workspace.js\";\nimport React from 'react';\nimport '../assets/css/Workspace.scss';\nimport * as components from \"../Hub\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Workspace extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getColor = () => {\n      let a = document.getElementById(\"colorField\").value;\n      this.str = `cl-${a}`;\n    };\n  }\n\n  render() {\n    let str;\n    const {\n      themeContext\n    } = this.props;\n    const {\n      userComponentName\n    } = this.props;\n\n    if (userComponentName !== \"\" && this.props.visibility) {\n      const Component = components[userComponentName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `workspace workspace_${themeContext}`,\n        children: [/*#__PURE__*/_jsxDEV(Component, {\n          className: `${this.str}`,\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            id: \"colorField\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit\",\n            onClick: this.getColor,\n            children: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `workspace workspace_${themeContext}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Workspace;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/Workspace.js"],"names":["React","components","Workspace","Component","getColor","a","document","getElementById","value","str","render","themeContext","props","userComponentName","visibility"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,QAA5B;;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAyBpCC,QAzBoC,GAyBzB,MAAM;AACb,UAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAA9C;AACA,WAAKC,GAAL,GAAY,MAAKJ,CAAE,EAAnB;AACH,KA5BmC;AAAA;;AACpCK,EAAAA,MAAM,GAAG;AACL,QAAID,GAAJ;AACA,UAAM;AAACE,MAAAA;AAAD,QAAiB,KAAKC,KAA5B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKD,KAAjC;;AACA,QAAIC,iBAAiB,KAAK,EAAtB,IAA4B,KAAKD,KAAL,CAAWE,UAA3C,EAAuD;AACnD,YAAMX,SAAS,GAAGF,UAAU,CAACY,iBAAD,CAA5B;AACA,0BACI;AAAK,QAAA,SAAS,EAAG,uBAAsBF,YAAa,EAApD;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAG,GAAE,KAAKF,GAAI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,kCACI;AAAO,YAAA,SAAS,EAAE,OAAlB;AAA2B,YAAA,EAAE,EAAE,YAA/B;AAA6C,YAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAE,QAAnB;AAA6B,YAAA,OAAO,EAAE,KAAKL,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH,KAbD,MAaO;AACH,0BACI;AAAK,QAAA,SAAS,EAAG,uBAAsBO,YAAa;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAvBmC;;AAgCxC,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport '../assets/css/Workspace.scss'\nimport * as components from \"../Hub\"\n\nclass Workspace extends React.Component {\n    render() {\n        let str;\n        const {themeContext} = this.props;\n        const {userComponentName} = this.props;\n        if (userComponentName !== \"\" && this.props.visibility) {\n            const Component = components[userComponentName]\n            return (\n                <div className={`workspace workspace_${themeContext}`}>\n                    <Component className={`${this.str}`}>Button</Component>\n\n                    <div className={\"form\"}>\n                        <input className={\"input\"} id={\"colorField\"} type=\"text\"/>\n                        <button className={\"submit\"} onClick={this.getColor}>submit</button>\n                    </div>\n\n                </div>\n            )\n        } else {\n            return (\n                <div className={`workspace workspace_${themeContext}`}/>\n            )\n        }\n    };\n\n    getColor = () => {\n        let a = document.getElementById(\"colorField\").value;\n        this.str = `cl-${a}`;\n    }\n\n}\n\nexport default Workspace;"]},"metadata":{},"sourceType":"module"}