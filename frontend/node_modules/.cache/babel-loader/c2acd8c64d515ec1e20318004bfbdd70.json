{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/AppMenu/FileBtn.js\";\nimport React, { Component } from 'react';\nimport { fileIcon } from './InnerTree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileBtn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCalled: false\n    };\n\n    this.displayComponent = () => {\n      const {\n        callComponent\n      } = this.props;\n      const fileName = this.props.file.slice(0, -3);\n      callComponent(fileName); // this.setState({\n      //     isCalled: !this.isCalled()\n      // })\n    };\n\n    this.isActive = () => {\n      return this.props.visibility;\n    };\n  }\n\n  render() {\n    const condition = this.isActive() ? 'active' : 'disabled'; // const condition = this.isCalled() ? 'active' : 'disabled';\n\n    const {\n      userComponentName\n    } = this.props;\n    const fileName = this.props.file.slice(0, -3);\n    const isEqual = userComponentName === fileName; // if (this.isCalled() && !isEqual) {\n    //     this.setState({\n    //         isCalled: false\n    //     })\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"tree-element__file\",\n      onClick: this.displayComponent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tree-element__highlighter ${condition}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), fileIcon, this.props.file, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.visibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  } // isCalled = () => {\n  //     return this.state.isCalled;\n  // }\n\n\n}\n\nexport default FileBtn;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/AppMenu/FileBtn.js"],"names":["React","Component","fileIcon","FileBtn","state","isCalled","displayComponent","callComponent","props","fileName","file","slice","isActive","visibility","render","condition","userComponentName","isEqual"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAE;AADN,KADoB;;AAAA,SA8B5BC,gBA9B4B,GA8BT,MAAM;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AACA,YAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAjB;AAEAJ,MAAAA,aAAa,CAACE,QAAD,CAAb,CAJqB,CAMrB;AACA;AACA;AACH,KAvC2B;;AAAA,SAwC5BG,QAxC4B,GAwCjB,MAAM;AACb,aAAO,KAAKJ,KAAL,CAAWK,UAAlB;AACH,KA1C2B;AAAA;;AAK5BC,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKH,QAAL,KAAkB,QAAlB,GAA6B,UAA/C,CADK,CAEL;;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAwB,KAAKR,KAAnC;AACA,UAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAjB;AACA,UAAMM,OAAO,GAAGD,iBAAiB,KAAKP,QAAtC,CALK,CAQL;AACA;AACA;AACA;AACA;;AAEA,wBACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AACQ,MAAA,OAAO,EAAG,KAAKH,gBADvB;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAG,6BAA4BS,SAAU;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKb,QAHL,EAIK,KAAKM,KAAL,CAAWE,IAJhB,eAKI;AAAA,kBAAI,KAAKF,KAAL,CAAWK;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GA5B2B,CA2C5B;AACA;AACA;;;AA7C4B;;AAgDhC,eAAeV,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport { fileIcon } from './InnerTree'\n\nclass FileBtn extends Component {\n    state = {\n        isCalled: false\n    }\n\n    render() {\n        const condition = this.isActive() ? 'active' : 'disabled';\n        // const condition = this.isCalled() ? 'active' : 'disabled';\n        const { userComponentName } = this.props;\n        const fileName = this.props.file.slice(0, -3);\n        const isEqual = userComponentName === fileName;\n\n\n        // if (this.isCalled() && !isEqual) {\n        //     this.setState({\n        //         isCalled: false\n        //     })\n        // }\n\n        return (\n            <button className=\"tree-element__file\"\n                    onClick={ this.displayComponent }>\n                <div className={`tree-element__highlighter ${condition}`}/>\n                {fileIcon}\n                {this.props.file}\n                <p>{this.props.visibility}</p>\n            </button>\n        )\n    }\n\n    displayComponent = () => {\n        const { callComponent } = this.props;\n        const fileName = this.props.file.slice(0, -3);\n\n        callComponent(fileName)\n\n        // this.setState({\n        //     isCalled: !this.isCalled()\n        // })\n    }\n    isActive = () => {\n        return this.props.visibility;\n    }\n    // isCalled = () => {\n    //     return this.state.isCalled;\n    // }\n}\n\nexport default FileBtn;"]},"metadata":{},"sourceType":"module"}