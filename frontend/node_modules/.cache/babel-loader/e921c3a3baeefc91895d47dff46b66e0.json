{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/InnerTree.js\";\nimport React, { Component } from 'react';\nimport '../../assets/css/App-menu/InnerTree.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\";\nimport FileBtn from \"./FileBtn\";\nimport DirBtn from \"./DirBtn\"; // устанавливаем иконки для разных положений кнопок навигации\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst folderOpen = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolderOpen\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 20\n}, this);\n\nconst folderClose = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_folder\",\n  icon: faFolder\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 21\n}, this);\n\nconst arrowDown = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretDown\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 19\n}, this);\n\nconst arrowRight = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon\",\n  icon: faCaretRight\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 20\n}, this);\n\nconst fileIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  className: \"tree-element__icon tree-element__icon_file\",\n  icon: faFileCode\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 18\n}, this); // компонент InnerTree выводит содержимое папки, которая его вызвала\n\n\nclass InnerTree extends Component {\n  render() {\n    const {\n      openDir,\n      tree\n    } = this.props;\n    let currentDir, dirsInside;\n    let isUserComponent = false;\n\n    if (Object.keys(tree).length) {\n      currentDir = tree[openDir];\n\n      if (Array.isArray(currentDir.dirs)) {\n        dirsInside = currentDir.dirs;\n      } else {\n        dirsInside = Array.from(currentDir.dirs);\n        isUserComponent = true;\n      }\n    } // выводим все подпапки в нашей папке\n\n\n    const dirBtn = dirsInside.map(dirName => /*#__PURE__*/_jsxDEV(DirBtn, {\n      dirName: dirName,\n      tree: tree\n    }, dirName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)); // выводим все файлы в нашей папке\n\n    const fileBtn = currentDir.files.map(file => /*#__PURE__*/_jsxDEV(FileBtn, {\n      file: file,\n      isUserFile: isUserComponent,\n      dir: openDir\n    }, file, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-element\",\n      children: [dirBtn, fileBtn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon };","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/AppMenu/InnerTree.js"],"names":["React","Component","FontAwesomeIcon","faFolder","faFolderOpen","faCaretRight","faCaretDown","faFileCode","FileBtn","DirBtn","folderOpen","folderClose","arrowDown","arrowRight","fileIcon","InnerTree","render","openDir","tree","props","currentDir","dirsInside","isUserComponent","Object","keys","length","Array","isArray","dirs","from","dirBtn","map","dirName","fileBtn","files","file"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,0CAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,qCAAvC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,UAApC,QAAsD,mCAAtD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;;AACA,MAAMC,UAAU,gBAAG,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,8CAA3B;AAA0E,EAAA,IAAI,EAAEN;AAAhF;AAAA;AAAA;AAAA;AAAA,QAAnB;;AACA,MAAMO,WAAW,gBAAG,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,8CAA3B;AAA0E,EAAA,IAAI,EAAER;AAAhF;AAAA;AAAA;AAAA;AAAA,QAApB;;AACA,MAAMS,SAAS,gBAAG,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,oBAA3B;AAAgD,EAAA,IAAI,EAAEN;AAAtD;AAAA;AAAA;AAAA;AAAA,QAAlB;;AACA,MAAMO,UAAU,gBAAG,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,oBAA3B;AAAgD,EAAA,IAAI,EAAER;AAAtD;AAAA;AAAA;AAAA;AAAA,QAAnB;;AACA,MAAMS,QAAQ,gBAAG,QAAC,eAAD;AAAiB,EAAA,SAAS,EAAC,4CAA3B;AAAwE,EAAA,IAAI,EAAEP;AAA9E;AAAA;AAAA;AAAA;AAAA,QAAjB,C,CAEA;;;AACA,MAAMQ,SAAN,SAAwBd,SAAxB,CAAkC;AAE9Be,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKC,KAA/B;AACA,QAAIC,UAAJ,EAAgBC,UAAhB;AACA,QAAIC,eAAe,GAAG,KAAtB;;AAEA,QAAIC,MAAM,CAACC,IAAP,CAAYN,IAAZ,EAAkBO,MAAtB,EAA8B;AAC1BL,MAAAA,UAAU,GAAGF,IAAI,CAACD,OAAD,CAAjB;;AAEA,UAAIS,KAAK,CAACC,OAAN,CAAcP,UAAU,CAACQ,IAAzB,CAAJ,EAAoC;AAChCP,QAAAA,UAAU,GAAGD,UAAU,CAACQ,IAAxB;AACH,OAFD,MAEO;AACHP,QAAAA,UAAU,GAAGK,KAAK,CAACG,IAAN,CAAWT,UAAU,CAACQ,IAAtB,CAAb;AACAN,QAAAA,eAAe,GAAG,IAAlB;AACH;AACJ,KAdK,CAgBN;;;AACA,UAAMQ,MAAM,GAAGT,UAAU,CAACU,GAAX,CAAgBC,OAAD,iBAC1B,QAAC,MAAD;AACQ,MAAA,OAAO,EAAEA,OADjB;AAEQ,MAAA,IAAI,EAAEd;AAFd,OAAac,OAAb;AAAA;AAAA;AAAA;AAAA,YADW,CAAf,CAjBM,CAuBN;;AACA,UAAMC,OAAO,GAAGb,UAAU,CAACc,KAAX,CAAiBH,GAAjB,CAAsBI,IAAD,iBACjC,QAAC,OAAD;AACS,MAAA,IAAI,EAAEA,IADf;AAES,MAAA,UAAU,EAAEb,eAFrB;AAGS,MAAA,GAAG,EAAEL;AAHd,OAAckB,IAAd;AAAA;AAAA;AAAA;AAAA,YADY,CAAhB;AAOA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKL,MADL,EAEKG,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvC6B;;AA0ClC,eAAelB,SAAf;AACA,SAASF,UAAT,EAAqBD,SAArB,EAAgCF,UAAhC,EAA4CC,WAA5C,EAAyDG,QAAzD","sourcesContent":["import React, {Component} from 'react';\nimport '../../assets/css/App-menu/InnerTree.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolder, faFolderOpen } from \"@fortawesome/free-regular-svg-icons\";\nimport { faCaretRight, faCaretDown, faFileCode } from \"@fortawesome/free-solid-svg-icons\";\nimport FileBtn from \"./FileBtn\";\nimport DirBtn from \"./DirBtn\";\n\n// устанавливаем иконки для разных положений кнопок навигации\nconst folderOpen = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolderOpen}/>\nconst folderClose = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_folder\" icon={faFolder}/>\nconst arrowDown = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretDown}/>\nconst arrowRight = <FontAwesomeIcon className=\"tree-element__icon\" icon={faCaretRight}/>\nconst fileIcon = <FontAwesomeIcon className=\"tree-element__icon tree-element__icon_file\" icon={faFileCode}/>\n\n// компонент InnerTree выводит содержимое папки, которая его вызвала\nclass InnerTree extends Component {\n\n    render () {\n        const { openDir, tree } = this.props;\n        let currentDir, dirsInside;\n        let isUserComponent = false;\n\n        if (Object.keys(tree).length) {\n            currentDir = tree[openDir];\n\n            if (Array.isArray(currentDir.dirs)) {\n                dirsInside = currentDir.dirs;\n            } else {\n                dirsInside = Array.from(currentDir.dirs);\n                isUserComponent = true;\n            }\n        }\n\n        // выводим все подпапки в нашей папке\n        const dirBtn = dirsInside.map((dirName) => (\n            <DirBtn key={dirName}\n                    dirName={dirName}\n                    tree={tree}/>\n        ));\n\n        // выводим все файлы в нашей папке\n        const fileBtn = currentDir.files.map((file) => (\n            <FileBtn key={file}\n                     file={file}\n                     isUserFile={isUserComponent}\n                     dir={openDir}/>\n        ));\n\n        return (\n            <div className=\"tree-element\">\n                {dirBtn}\n                {fileBtn}\n            </div>\n        )\n    }\n}\n\nexport default InnerTree;\nexport { arrowRight, arrowDown, folderOpen, folderClose, fileIcon }"]},"metadata":{},"sourceType":"module"}