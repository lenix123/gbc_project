{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/BankCard/BankCard.js\";\nimport React, { Component } from \"react\";\nimport \"./BankCard.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport Data from \"../Data/Data\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BankCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      bankName: '',\n      bankLogo: '',\n      brandLogo: '',\n      background: '',\n      textColor: '',\n      codeName: 'CVV',\n      nameLogo: ''\n    };\n\n    this.handleChange = () => {\n      let cardNum = document.querySelector(\"#card-number\").value.trim();\n      cardNum = cardNum.replace(/[-_]+/g, '');\n\n      if (cardNum.length > 5) {\n        let cardInfo = new CardInfo(cardNum, {\n          banksLogosPath: '/node_modules/card-info/dist/banks-logos/',\n          brandsLogosPath: '/node_modules/card-info/dist/brands-logos/'\n        });\n\n        if (cardInfo.bankName !== null) {\n          this.setState({\n            bankName: cardInfo.bankName,\n            bankLogo: cardInfo.bankLogo,\n            brandLogo: cardInfo.brandLogo,\n            background: cardInfo.backgroundGradient,\n            textColor: cardInfo.textColor,\n            codeName: cardInfo.codeName,\n            nameLogo: cardInfo.bankAlias.replace('ru-', '').replace('24', '')\n          });\n        }\n      } else {\n        this.setState({\n          bankName: '',\n          bankLogo: '',\n          brandLogo: '',\n          background: '',\n          textColor: '',\n          codeName: 'CVV',\n          nameLogo: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      componentsState\n    } = this.props;\n    const componentStyle = componentsState && componentsState[\"BankCard\"];\n    const styleReader = new StyleReader(componentStyle);\n    const defaultText = componentStyle.text || 'Lenix Bank';\n    let CardStyle = styleReader.style;\n    CardStyle['background'] = this.state.background || CardStyle['background'];\n    CardStyle['color'] = this.state.textColor || CardStyle['color'];\n    let BankLogo;\n\n    if (this.state.bankName === '') {\n      BankLogo = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.bankName || defaultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this);\n    } else if (this.state.nameLogo !== '') {\n      if (nameLogos[this.state.nameLogo] !== undefined) {\n        BankLogo = /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"bankCard__img\",\n          src: nameLogos[this.state.nameLogo],\n          alt: this.state.bankName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this);\n      } else {\n        BankLogo = /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bankCard__bankName\",\n          children: this.state.bankName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this);\n      }\n    }\n\n    let BrandLogo;\n    let pathToLogo = this.state.brandLogo;\n\n    if (pathToLogo !== '') {\n      let fileName = pathToLogo.split(\"/\");\n      fileName = fileName[fileName.length - 1];\n      let brandName = fileName.replaceAll('-', '_').replaceAll('.svg', '');\n      BrandLogo = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nameBrands[brandName],\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bankCard\",\n      style: CardStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bankCard__bankLogo\",\n        children: BankLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bankCard__number\",\n        children: /*#__PURE__*/_jsxDEV(Data, {\n          className: \"bankCard__number__form\",\n          id: \"card-number\",\n          onChange: this.handleChange,\n          formMask: \"9999-9999-9999-9999\",\n          formPlaceholder: \"Card number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bankCard__lower\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bankCard__lower__forms\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bankCard__period\",\n            children: [/*#__PURE__*/_jsxDEV(Data, {\n              className: \"bankCard__month\",\n              formMask: \"99\",\n              formPlaceholder: \"MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bankCard__splitter\",\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Data, {\n              className: \"bankCard__year\",\n              formMask: \"99\",\n              formPlaceholder: \"YY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Data, {\n            className: \"bankCard__code\",\n            formMask: \"999\",\n            formPlaceholder: this.state.codeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bankCard__brandLogo\",\n          children: BrandLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(BankCard);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Forms/BankCard/BankCard.js"],"names":["React","Component","StyleReader","Data","connect","BankCard","state","bankName","bankLogo","brandLogo","background","textColor","codeName","nameLogo","handleChange","cardNum","document","querySelector","value","trim","replace","length","cardInfo","CardInfo","banksLogosPath","brandsLogosPath","setState","backgroundGradient","bankAlias","render","componentsState","props","componentStyle","styleReader","defaultText","text","CardStyle","style","BankLogo","nameLogos","undefined","BrandLogo","pathToLogo","fileName","split","brandName","replaceAll","nameBrands","mapStateToProps","libraryState"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./BankCard.css\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport Data from \"../Data/Data\";\nimport {connect} from \"react-redux\";\n\nclass BankCard extends Component {\n    state = {\n        bankName: '',\n        bankLogo: '',\n        brandLogo: '',\n        background: '',\n        textColor: '',\n        codeName: 'CVV',\n        nameLogo: '',\n    }\n\n    render() {\n        const {componentsState} = this.props;\n        const componentStyle = componentsState && componentsState[\"BankCard\"];\n        const styleReader = new StyleReader(componentStyle);\n        const defaultText = componentStyle.text || 'Lenix Bank'\n        let CardStyle = styleReader.style;\n        CardStyle['background'] = this.state.background || CardStyle['background'];\n        CardStyle['color'] = this.state.textColor || CardStyle['color'];\n\n        let BankLogo;\n        if (this.state.bankName === '') {\n            BankLogo = <p>{this.state.bankName || defaultText}</p>;\n        } else if (this.state.nameLogo !== '') {\n\n            if (nameLogos[this.state.nameLogo] !== undefined) {\n                BankLogo =  <img className=\"bankCard__img\" src={nameLogos[this.state.nameLogo]} alt={this.state.bankName} />;\n            } else {\n                BankLogo = <p className=\"bankCard__bankName\">{this.state.bankName}</p>;\n            }\n\n        }\n\n        let BrandLogo;\n        let pathToLogo = this.state.brandLogo;\n        if (pathToLogo !== '') {\n            let fileName = pathToLogo.split(\"/\");\n            fileName = fileName[fileName.length-1];\n            let brandName = fileName.replaceAll('-', '_').replaceAll('.svg', '');\n            BrandLogo = <img src={nameBrands[brandName]} alt=\"\" />;\n        }\n\n        return (\n            <div className={\"bankCard\"} style={CardStyle}>\n                <div className=\"bankCard__bankLogo\">\n                    {BankLogo}\n                </div>\n                <div className=\"bankCard__number\">\n                    <Data className={\"bankCard__number__form\"}\n                          id={\"card-number\"}\n                          onChange={this.handleChange}\n                          formMask={\"9999-9999-9999-9999\"}\n                          formPlaceholder={\"Card number\"} />\n                </div>\n                <div className={\"bankCard__lower\"}>\n                    <div className=\"bankCard__lower__forms\">\n                        <div className={\"bankCard__period\"}>\n                            <Data className={\"bankCard__month\"}\n                                  formMask={\"99\"}\n                                  formPlaceholder={\"MM\"}/>\n                            <p className={\"bankCard__splitter\"}>/</p>\n                            <Data className={\"bankCard__year\"}\n                                  formMask={\"99\"}\n                                  formPlaceholder={\"YY\"}/>\n                        </div>\n                        <Data className={\"bankCard__code\"}\n                              formMask={\"999\"}\n                              formPlaceholder={this.state.codeName}/>\n                    </div>\n                    <div className=\"bankCard__brandLogo\">\n                        {BrandLogo}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleChange = () => {\n        let cardNum = document.querySelector(\"#card-number\").value.trim();\n        cardNum = cardNum.replace(/[-_]+/g, '');\n        if (cardNum.length > 5) {\n            let cardInfo = new CardInfo(cardNum, {\n                banksLogosPath: '/node_modules/card-info/dist/banks-logos/',\n                brandsLogosPath: '/node_modules/card-info/dist/brands-logos/'\n            });\n\n            if (cardInfo.bankName !== null) {\n                this.setState({\n                    bankName: cardInfo.bankName,\n                    bankLogo: cardInfo.bankLogo,\n                    brandLogo: cardInfo.brandLogo,\n                    background: cardInfo.backgroundGradient,\n                    textColor: cardInfo.textColor,\n                    codeName: cardInfo.codeName,\n                    nameLogo: cardInfo.bankAlias.replace('ru-', '').replace('24', ''),\n                });\n            }\n        } else {\n            this.setState({\n                bankName: '',\n                bankLogo: '',\n                brandLogo: '',\n                background: '',\n                textColor: '',\n                codeName: 'CVV',\n                nameLogo: '',\n            })\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(BankCard);"]},"metadata":{},"sourceType":"module"}