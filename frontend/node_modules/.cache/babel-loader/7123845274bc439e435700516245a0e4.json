{"ast":null,"code":"import { SHOW_NEW_COMPONENT } from \"./actions\";\nconst defaultState = {\n  componentName: \"\",\n  isUserComponent: false,\n  userComponentName: \"\"\n};\nexport const currentComponentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_NEW_COMPONENT:\n      // если пользователь вызывает компонент, который уже отображается,\n      // значит этот компанент больше не нужно отображать\n      if (action.payload.componentName === state.componentName && !action.payload.isUserComponent) {\n        return { ...state,\n          componentName: \"\",\n          isUserComponent: action.payload.isUserComponent,\n          userComponentName: \"\"\n        };\n      } else {\n        // если пользователь вызывает новый компонент из библиотеки,\n        // то его нужно отобразить\n        return { ...state,\n          componentName: action.payload.componentName,\n          isUserComponent: action.payload.isUserComponent,\n          userComponentName: action.payload.userComponentName\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/store/currentComponent/reducers.js"],"names":["SHOW_NEW_COMPONENT","defaultState","componentName","isUserComponent","userComponentName","currentComponentReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,WAAnC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,iBAAiB,EAAE;AAHF,CAArB;AAMA,OAAO,MAAMC,uBAAuB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,kBAAL;AACI;AACA;AACA,UAAIO,MAAM,CAACE,OAAP,CAAeP,aAAf,KAAiCI,KAAK,CAACJ,aAAvC,IAAwD,CAACK,MAAM,CAACE,OAAP,CAAeN,eAA5E,EAA6F;AACzF,eAAO,EACH,GAAGG,KADA;AAEHJ,UAAAA,aAAa,EAAE,EAFZ;AAGHC,UAAAA,eAAe,EAAEI,MAAM,CAACE,OAAP,CAAeN,eAH7B;AAIHC,UAAAA,iBAAiB,EAAE;AAJhB,SAAP;AAMH,OAPD,MAOO;AACH;AACA;AACA,eAAO,EACH,GAAGE,KADA;AAEHJ,UAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeP,aAF3B;AAGHC,UAAAA,eAAe,EAAEI,MAAM,CAACE,OAAP,CAAeN,eAH7B;AAIHC,UAAAA,iBAAiB,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAJ/B,SAAP;AAMH;;AACL;AACI,aAAOE,KAAP;AAtBR;AAwBH,CAzBM","sourcesContent":["import { SHOW_NEW_COMPONENT } from \"./actions\";\n\nconst defaultState = {\n    componentName: \"\",\n    isUserComponent: false,\n    userComponentName: \"\",\n};\n\nexport const currentComponentReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SHOW_NEW_COMPONENT:\n            // если пользователь вызывает компонент, который уже отображается,\n            // значит этот компанент больше не нужно отображать\n            if (action.payload.componentName === state.componentName && !action.payload.isUserComponent) {\n                return {\n                    ...state,\n                    componentName: \"\",\n                    isUserComponent: action.payload.isUserComponent,\n                    userComponentName: \"\"\n                }\n            } else {\n                // если пользователь вызывает новый компонент из библиотеки,\n                // то его нужно отобразить\n                return {\n                    ...state,\n                    componentName: action.payload.componentName,\n                    isUserComponent: action.payload.isUserComponent,\n                    userComponentName: action.payload.userComponentName\n                }\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}