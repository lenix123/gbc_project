{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/Tabs/TabItem.js\";\nimport React, { Component } from 'react'; // TabItem - одна вкладка в целой панели вкладок (Tabs)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TabItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        switchTab,\n        tabItemName\n      } = this.props;\n      switchTab(tabItemName);\n    };\n  }\n\n  render() {\n    // получает из пропсов имя данной вкладки и имя активной вкладки\n    const {\n      tabItemName,\n      currentTabName\n    } = this.props; // переменная содержит информацию о том, совпадает ли активная (открытая) вкладка с текущей\n\n    const activeMarker = tabItemName === currentTabName ? 'active' : 'disabled';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tabs__btn\",\n        onClick: this.handleClick,\n        children: tabItemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tabs__underline tabs__underline_${activeMarker}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } // метод, обрабатывающий нажатие и вызывающий функцию-колбэк смены активной вкладки\n\n\n}\n\nexport default TabItem;","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/ControlCenter/Tabs/TabItem.js"],"names":["React","Component","TabItem","handleClick","switchTab","tabItemName","props","render","currentTabName","activeMarker"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAoB5BE,WApB4B,GAoBd,MAAM;AAChB,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAA6B,KAAKC,KAAxC;AACAF,MAAAA,SAAS,CAACC,WAAD,CAAT;AACH,KAvB2B;AAAA;;AAE5BE,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAACF,MAAAA,WAAD;AAAcG,MAAAA;AAAd,QAAgC,KAAKF,KAA3C,CAFK,CAGL;;AACA,UAAMG,YAAY,GAAGJ,WAAW,KAAKG,cAAhB,GAAiC,QAAjC,GAA4C,UAAjE;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AACQ,QAAA,OAAO,EAAE,KAAKL,WADtB;AAAA,kBAEKE;AAFL;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAG,mCAAkCI,YAAa;AAAhE;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAjB2B,CAmB5B;;;AAnB4B;;AA2BhC,eAAeP,OAAf","sourcesContent":["import React, { Component } from 'react';\n\n// TabItem - одна вкладка в целой панели вкладок (Tabs)\nclass TabItem extends Component {\n\n    render() {\n        // получает из пропсов имя данной вкладки и имя активной вкладки\n        const {tabItemName, currentTabName} = this.props;\n        // переменная содержит информацию о том, совпадает ли активная (открытая) вкладка с текущей\n        const activeMarker = tabItemName === currentTabName ? 'active' : 'disabled';\n\n        return(\n            <div className=\"tabs__wrapper\">\n                <button className=\"tabs__btn\"\n                        onClick={this.handleClick}>\n                    {tabItemName}\n                </button>\n                <div className={`tabs__underline tabs__underline_${activeMarker}`}/>\n            </div>\n        )\n    }\n\n    // метод, обрабатывающий нажатие и вызывающий функцию-колбэк смены активной вкладки\n    handleClick = () => {\n        const { switchTab, tabItemName } = this.props;\n        switchTab(tabItemName);\n    }\n}\n\n\nexport default TabItem;\n"]},"metadata":{},"sourceType":"module"}