{"ast":null,"code":"import { CHANGE_USER_COMPONENT_STYLE, RESET_USER_COMPONENT_STYLES, SET_USER_LIBRARY } from \"./actions\";\nconst defaultState = {};\nlet defaultUserLibrary;\nexport const userLibraryReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_LIBRARY:\n      defaultUserLibrary = action.payload;\n\n      for (let component of action.payload) {\n        defaultState[component.component_name] = Object.assign({}, component.params);\n      }\n\n      return defaultState;\n\n    case CHANGE_USER_COMPONENT_STYLE:\n      const {\n        componentName,\n        styleTypeToChange,\n        styleValue\n      } = action.payload;\n      const updatedStyles = state[componentName];\n      updatedStyles[styleTypeToChange] = styleValue;\n      return { ...state,\n        [componentName]: updatedStyles\n      };\n\n    case RESET_USER_COMPONENT_STYLES:\n      console.log(defaultUserLibrary);\n      const componentToReset = action.payload;\n      const resetStyles = state[componentToReset];\n      const properties = Object.keys(resetStyles);\n      properties.forEach(property => {\n        resetStyles[property] = '';\n      });\n      return { ...state,\n        [componentToReset]: resetStyles\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/store/userLibrary/reducers.js"],"names":["CHANGE_USER_COMPONENT_STYLE","RESET_USER_COMPONENT_STYLES","SET_USER_LIBRARY","defaultState","defaultUserLibrary","userLibraryReducer","state","action","type","payload","component","component_name","Object","assign","params","componentName","styleTypeToChange","styleValue","updatedStyles","console","log","componentToReset","resetStyles","properties","keys","forEach","property"],"mappings":"AAAA,SAAQA,2BAAR,EAAqCC,2BAArC,EAAkEC,gBAAlE,QAAyF,WAAzF;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,IAAIC,kBAAJ;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,gBAAL;AACIE,MAAAA,kBAAkB,GAAGG,MAAM,CAACE,OAA5B;;AAEA,WAAK,IAAIC,SAAT,IAAsBH,MAAM,CAACE,OAA7B,EAAsC;AAClCN,QAAAA,YAAY,CAACO,SAAS,CAACC,cAAX,CAAZ,GAAyCC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,SAAS,CAACI,MAA5B,CAAzC;AACH;;AAED,aAAOX,YAAP;;AAEJ,SAAKH,2BAAL;AACI,YAAM;AAACe,QAAAA,aAAD;AAAgBC,QAAAA,iBAAhB;AAAmCC,QAAAA;AAAnC,UAAiDV,MAAM,CAACE,OAA9D;AACA,YAAMS,aAAa,GAAGZ,KAAK,CAACS,aAAD,CAA3B;AACAG,MAAAA,aAAa,CAACF,iBAAD,CAAb,GAAmCC,UAAnC;AAEA,aAAO,EACH,GAAGX,KADA;AAEH,SAACS,aAAD,GAAiBG;AAFd,OAAP;;AAMJ,SAAKjB,2BAAL;AACIkB,MAAAA,OAAO,CAACC,GAAR,CAAYhB,kBAAZ;AACA,YAAMiB,gBAAgB,GAAGd,MAAM,CAACE,OAAhC;AACA,YAAMa,WAAW,GAAGhB,KAAK,CAACe,gBAAD,CAAzB;AACA,YAAME,UAAU,GAAIX,MAAM,CAACY,IAAP,CAAYF,WAAZ,CAApB;AAEAC,MAAAA,UAAU,CAACE,OAAX,CAAmBC,QAAQ,IAAI;AAC3BJ,QAAAA,WAAW,CAACI,QAAD,CAAX,GAAwB,EAAxB;AACH,OAFD;AAIA,aAAO,EACH,GAAGpB,KADA;AAEH,SAACe,gBAAD,GAAoBC;AAFjB,OAAP;;AAKJ;AACI,aAAOhB,KAAP;AArCR;AAuCH,CAxCM","sourcesContent":["import {CHANGE_USER_COMPONENT_STYLE, RESET_USER_COMPONENT_STYLES, SET_USER_LIBRARY} from \"./actions\";\n\nconst defaultState = {};\nlet defaultUserLibrary;\n\nexport const userLibraryReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_USER_LIBRARY:\n            defaultUserLibrary = action.payload;\n\n            for (let component of action.payload) {\n                defaultState[component.component_name] = Object.assign({}, component.params);\n            }\n\n            return defaultState;\n\n        case CHANGE_USER_COMPONENT_STYLE:\n            const {componentName, styleTypeToChange, styleValue} = action.payload;\n            const updatedStyles = state[componentName];\n            updatedStyles[styleTypeToChange] = styleValue;\n\n            return {\n                ...state,\n                [componentName]: updatedStyles\n            }\n\n\n        case RESET_USER_COMPONENT_STYLES:\n            console.log(defaultUserLibrary)\n            const componentToReset = action.payload;\n            const resetStyles = state[componentToReset];\n            const properties =  Object.keys(resetStyles);\n\n            properties.forEach(property => {\n                resetStyles[property] = '';\n            });\n\n            return {\n                ...state,\n                [componentToReset]: resetStyles\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}