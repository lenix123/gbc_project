{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/Workspace.js\";\nimport React from 'react';\nimport '../assets/css/Workspace.scss';\nimport * as components from \"../utils/Hub\";\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Workspace extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //do not touch\n      currentName: \"\"\n    };\n\n    this.getStyles = (styleType, value) => {\n      this.setState({\n        [styleType]: value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.buildClassName = () => {\n      let className = '';\n\n      for (let style in this.state) {\n        if (style !== 'text' && style !== \"currentName\") {\n          className += `${style}-${this.state[style]} `;\n        }\n      }\n\n      return className;\n    };\n  }\n\n  render() {\n    const {\n      themeContext\n    } = this.props;\n    const {\n      userComponentName\n    } = this.props;\n    const Component = components[userComponentName];\n\n    const currentComponent = userComponentName && /*#__PURE__*/_jsxDEV(Component, {\n      className: `${this.buildClassName()}`,\n      children: this.state.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 55\n    }, this);\n\n    let control;\n\n    if (this.state.currentName !== userComponentName) {\n      control = /*#__PURE__*/_jsxDEV(ControlCenter, {\n        getStyles: this.getStyles,\n        componentName: userComponentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }, this);\n      this.setState({\n        currentComponent: userComponentName\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workspace workspace_${themeContext}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace__content\",\n          children: currentComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), control]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Workspace;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/Workspace.js"],"names":["React","components","ControlCenter","Workspace","Component","state","currentName","getStyles","styleType","value","setState","console","log","buildClassName","className","style","render","themeContext","props","userComponentName","currentComponent","text","control"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACJ;AAGAC,MAAAA,WAAW,EAAE;AAJT,KAD4B;;AAAA,SAmCpCC,SAnCoC,GAmCxB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC9B,WAAKC,QAAL,CAAc;AAAC,SAACF,SAAD,GAAaC;AAAd,OAAd,EAAoC,MAAM;AACtCE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACH,OAFD;AAGH,KAvCmC;;AAAA,SAyCpCQ,cAzCoC,GAyCnB,MAAM;AACnB,UAAIC,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,KAAT,IAAkB,KAAKV,KAAvB,EAA8B;AAI1B,YAAIU,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,aAAlC,EAAiD;AAI7CD,UAAAA,SAAS,IAAK,GAAEC,KAAM,IAAG,KAAKV,KAAL,CAAWU,KAAX,CAAkB,GAA3C;AACH;AACJ;;AAED,aAAOD,SAAP;AACH,KAzDmC;AAAA;;AAUpCE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAiB,KAAKC,KAA5B;AACA,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKD,KAAjC;AACA,UAAMd,SAAS,GAAGH,UAAU,CAACkB,iBAAD,CAA5B;;AAEA,UAAMC,gBAAgB,GAAGD,iBAAiB,iBAAI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAG,GAAE,KAAKN,cAAL,EAAsB,EAA/C;AAAA,gBACO,KAAKR,KAAL,CAAWgB;AADlB;AAAA;AAAA;AAAA;AAAA,YAA9C;;AAGA,QAAIC,OAAJ;;AACA,QAAI,KAAKjB,KAAL,CAAWC,WAAX,KAA2Ba,iBAA/B,EAAkD;AAC9CG,MAAAA,OAAO,gBAAG,QAAC,aAAD;AAAe,QAAA,SAAS,EAAE,KAAKf,SAA/B;AAA0C,QAAA,aAAa,EAAEY;AAAzD;AAAA;AAAA;AAAA;AAAA,cAAV;AACA,WAAKT,QAAL,CAAc;AAACU,QAAAA,gBAAgB,EAAED;AAAnB,OAAd;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAG,uBAAsBF,YAAa,EAApD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACKG;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKE,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAjCmC;;AA4DxC,eAAenB,SAAf","sourcesContent":["import React from 'react';\nimport '../assets/css/Workspace.scss'\nimport * as components from \"../utils/Hub\"\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\n\nclass Workspace extends React.Component {\n    state = {\n        //do not touch\n\n\n        currentName: \"\"\n\n\n    }\n\n    render() {\n        const {themeContext} = this.props;\n        const {userComponentName} = this.props;\n        const Component = components[userComponentName];\n\n        const currentComponent = userComponentName && <Component className={`${this.buildClassName()}`}>\n                                                            {this.state.text}\n                                                      </Component>;\n        let control;\n        if (this.state.currentName !== userComponentName) {\n            control = <ControlCenter getStyles={this.getStyles} componentName={userComponentName}/>;\n            this.setState({currentComponent: userComponentName});\n        }\n        return (\n            <div className={`workspace workspace_${themeContext}`}>\n                <div className=\"workspace__inner\">\n                    <div className=\"workspace__content\">\n                        {currentComponent}\n                    </div>\n                    {control}\n                </div>\n            </div>\n        )\n    }\n\n    getStyles = (styleType, value) => {\n        this.setState({[styleType]: value}, () => {\n            console.log(this.state);\n        })\n    }\n\n    buildClassName = () => {\n        let className = '';\n\n        for (let style in this.state) {\n\n\n\n            if (style !== 'text' && style !== \"currentName\") {\n\n\n\n                className += `${style}-${this.state[style]} `\n            }\n        }\n\n        return className;\n    }\n}\n\nexport default Workspace;"]},"metadata":{},"sourceType":"module"}