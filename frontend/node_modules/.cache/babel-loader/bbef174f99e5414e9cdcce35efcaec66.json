{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/ControlCenter/ExportMenu.js\";\nimport React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlMenu.scss';\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StyleMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"Copy\"\n    };\n\n    this.copyToClipboard = () => {\n      let str = document.getElementById('item-to-copy').innerText;\n      let el = document.createElement('textarea');\n      el.value = str;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this.setState({\n        text: \"Copied\"\n      });\n      setTimeout(this.changeText, 1500);\n    };\n\n    this.changeText = () => {\n      this.setState({\n        text: \"Copy\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-menu control-menu_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control-menu__link\",\n        id: \"item-to-copy\",\n        children: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.copyToClipboard,\n        id: \"myInput\",\n        className: \"control-menu__button\",\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StyleMenu;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/ControlCenter/ExportMenu.js"],"names":["React","Component","text","StyleMenu","state","copyToClipboard","str","document","getElementById","innerText","el","createElement","value","body","appendChild","select","execCommand","removeChild","setState","setTimeout","changeText","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iDAAP;AACA,SAAQC,IAAR,QAAmB,mCAAnB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJF,MAAAA,IAAI,EAAE;AADF,KADsB;;AAAA,SAiB7BG,eAjB6B,GAiBX,MAAM;AACrB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAlD;AACA,UAAIC,EAAE,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,KAAH,GAAWN,GAAX;AACAC,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACAA,MAAAA,EAAE,CAACK,MAAH;AACAR,MAAAA,QAAQ,CAACS,WAAT,CAAqB,MAArB;AACAT,MAAAA,QAAQ,CAACM,IAAT,CAAcI,WAAd,CAA0BP,EAA1B;AACA,WAAKQ,QAAL,CAAc;AAAChB,QAAAA,IAAI,EAAE;AAAP,OAAd;AACCiB,MAAAA,UAAU,CAAC,KAAKC,UAAN,EAAkB,IAAlB,CAAV;AACJ,KA3B6B;;AAAA,SA4B9BA,UA5B8B,GA4BjB,MAAM;AACf,WAAKF,QAAL,CAAc;AAAChB,QAAAA,IAAI,EAAE;AAAP,OAAd;AACH,KA9B6B;AAAA;;AAI9BmB,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAE,oBAAd;AAAoC,QAAA,EAAE,EAAE,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKhB,eAAtB;AAAuC,QAAA,EAAE,EAAE,SAA3C;AAAsD,QAAA,SAAS,EAAE,sBAAjE;AAAA,kBACK,KAAKD,KAAL,CAAWF;AADhB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhB6B;;AAiClC,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlMenu.scss';\nimport {text} from \"@fortawesome/fontawesome-svg-core\";\n\nclass StyleMenu extends Component {\n    state = {\n        text: \"Copy\"\n    }\n    render () {\n        return (\n            <div className=\"control-menu control-menu_row\">\n                <p className={\"control-menu__link\"} id={\"item-to-copy\"}>\n                    Lorem ipsum dolor sit amet,\n                    consectetur adipisicing elit.\n                </p>\n                <button onClick={this.copyToClipboard} id={\"myInput\"} className={\"control-menu__button\"}>\n                    {this.state.text}\n                </button>\n            </div>\n        )\n    }\n     copyToClipboard = () => {\n        let str = document.getElementById('item-to-copy').innerText;\n        let el = document.createElement('textarea');\n        el.value = str;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n        this.setState({text: \"Copied\"})\n         setTimeout(this.changeText, 1500)\n    }\n    changeText = () => {\n        this.setState({text: \"Copy\"})\n    }\n}\n\nexport default StyleMenu;\n"]},"metadata":{},"sourceType":"module"}