{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Buttons/Outline/Outline.js\";\nimport React, { Component } from \"react\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport styled from \"styled-components\";\nimport \"./Outline.css\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Outline extends Component {\n  render() {\n    const {\n      componentsState\n    } = this.props;\n    const componentStyle = componentsState && componentsState[\"Outline\"];\n    const text = componentStyle.text || \"Scooby Doo\";\n    const styleReader = new StyleReader(componentStyle);\n    const mainColor = componentStyle['bc'] || \"#0071f0\";\n    const Button = styled.button`\n          background: none;\n          border: ${mainColor} solid 3px;\n          color: ${mainColor};\n          &:hover {\n            background: ${mainColor};\n            color: ${componentStyle['clh'] || '#fff'};\n          }\n        `;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      className: this.props.className + \" outline-btn\",\n      style: styleReader.style,\n      onClick: e => this.handleClick(e),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    componentsState: state.libraryState\n  };\n};\n\nexport default connect(mapStateToProps)(Outline);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Library/Buttons/Outline/Outline.js"],"names":["React","Component","StyleReader","styled","connect","Outline","render","componentsState","props","componentStyle","text","styleReader","mainColor","Button","button","className","style","e","handleClick","preventDefault","mapStateToProps","state","libraryState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,eAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAoB,KAAKC,KAA/B;AACA,UAAMC,cAAc,GAAGF,eAAe,IAAIA,eAAe,CAAC,SAAD,CAAzD;AACA,UAAMG,IAAI,GAAGD,cAAc,CAACC,IAAf,IAAuB,YAApC;AACA,UAAMC,WAAW,GAAG,IAAIT,WAAJ,CAAgBO,cAAhB,CAApB;AAEA,UAAMG,SAAS,GAAGH,cAAc,CAAC,IAAD,CAAd,IAAwB,SAA1C;AACA,UAAMI,MAAM,GAAGV,MAAM,CAACW,MAAO;AACrC;AACA,oBAAoBF,SAAU;AAC9B,mBAAmBA,SAAU;AAC7B;AACA,0BAA0BA,SAAU;AACpC,qBAAqBH,cAAc,CAAC,KAAD,CAAd,IAAyB,MAAO;AACrD;AACA,SARQ;AAUA,wBACI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWO,SAAX,GAAuB,cAA1C;AACQ,MAAA,KAAK,EAAEJ,WAAW,CAACK,KAD3B;AAEQ,MAAA,OAAO,EAAGC,CAAC,IAAI,KAAKC,WAAL,CAAiBD,CAAjB,CAFvB;AAAA,gBAGKP;AAHL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAEDQ,EAAAA,WAAW,CAACD,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACE,cAAF;AACH;;AA7B2B;;AAgChC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,eAAe,EAAEc,KAAK,CAACC;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAelB,OAAO,CAACgB,eAAD,CAAP,CAAyBf,OAAzB,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport StyleReader from \"../../../../utils/StyleReader\";\nimport styled from \"styled-components\";\nimport \"./Outline.css\"\nimport {connect} from \"react-redux\";\n\n\nclass Outline extends Component {\n    render() {\n        const {componentsState} = this.props;\n        const componentStyle = componentsState && componentsState[\"Outline\"];\n        const text = componentStyle.text || \"Scooby Doo\";\n        const styleReader = new StyleReader(componentStyle);\n\n        const mainColor = componentStyle['bc'] || \"#0071f0\";\n        const Button = styled.button`\n          background: none;\n          border: ${mainColor} solid 3px;\n          color: ${mainColor};\n          &:hover {\n            background: ${mainColor};\n            color: ${componentStyle['clh'] || '#fff'};\n          }\n        `;\n\n        return (\n            <Button className={this.props.className + \" outline-btn\"}\n                    style={styleReader.style}\n                    onClick={ e => this.handleClick(e) }>\n                {text}\n            </Button>\n        )\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentsState: state.libraryState\n    }\n}\n\nexport default connect(mapStateToProps)(Outline);"]},"metadata":{},"sourceType":"module"}