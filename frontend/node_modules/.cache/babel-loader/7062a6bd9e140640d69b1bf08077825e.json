{"ast":null,"code":"var _jsxFileName = \"/home/lenix/PycharmProjects/GBC/frontend/src/components/Workspace.js\";\nimport React from 'react';\nimport '../assets/css/Workspace.scss';\nimport * as components from \"../utils/Hub\";\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\nimport ThemeContext from \"./ThemeControl/ThemeContext\";\nimport { connect } from \"react-redux\"; // один из ключевых компонентов\n// Workspace отображает рабочее пользовательское пространство в правой части приложения\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Workspace extends React.Component {\n  render() {\n    const {\n      componentName,\n      userComponents\n    } = this.props;\n    const isUserComponent = userComponents.length;\n    const themeContext = this.context.theme; // исходя из переданного пропсом имени выбирается текущий компонент для отображения\n\n    const Component = components[componentName]; // проверка на то, открыт ли компонент\n\n    const currentComponent = componentName && /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 51\n    }, this); // аналогично\n\n\n    const currentMenu = componentName && /*#__PURE__*/_jsxDEV(ControlCenter, {\n      resetStyles: this.resetStyles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 46\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `workspace workspace_${themeContext}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workspace__inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workspace__content\",\n          children: currentComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), currentMenu]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  } // передача контекста текущей UI-темы\n\n\n}\n\nWorkspace.contextType = ThemeContext;\n\nconst mapStateToProps = state => {\n  return {\n    componentName: state.currentComponent.componentName\n  };\n};\n\nexport default connect(mapStateToProps)(Workspace);","map":{"version":3,"sources":["/home/lenix/PycharmProjects/GBC/frontend/src/components/Workspace.js"],"names":["React","components","ControlCenter","ThemeContext","connect","Workspace","Component","render","componentName","userComponents","props","isUserComponent","length","themeContext","context","theme","currentComponent","currentMenu","resetStyles","contextType","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAGA;AACA;;;;AACA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,aAAD;AAAgBC,MAAAA;AAAhB,QAAkC,KAAKC,KAA7C;AACA,UAAMC,eAAe,GAAGF,cAAc,CAACG,MAAvC;AAEA,UAAMC,YAAY,GAAG,KAAKC,OAAL,CAAaC,KAAlC,CAJK,CAKL;;AACA,UAAMT,SAAS,GAAGL,UAAU,CAACO,aAAD,CAA5B,CANK,CAQL;;AACA,UAAMQ,gBAAgB,GAAGR,aAAa,iBAAI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAA1C,CATK,CAUL;;;AACA,UAAMS,WAAW,GAAGT,aAAa,iBAAI,QAAC,aAAD;AAAe,MAAA,WAAW,EAAE,KAAKU;AAAjC;AAAA;AAAA;AAAA;AAAA,YAArC;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAG,uBAAsBL,YAAa,EAApD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBACKG;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKC,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAxBmC,CA0BpC;;;AA1BoC;;AAAlCZ,S,CA2BKc,W,GAAchB,Y;;AAGzB,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,aAAa,EAAEa,KAAK,CAACL,gBAAN,CAAuBR;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACgB,eAAD,CAAP,CAAyBf,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport '../assets/css/Workspace.scss'\nimport * as components from \"../utils/Hub\"\nimport ControlCenter from \"./ControlCenter/ControlCenter\";\nimport ThemeContext from \"./ThemeControl/ThemeContext\";\nimport {connect} from \"react-redux\";\n\n\n// один из ключевых компонентов\n// Workspace отображает рабочее пользовательское пространство в правой части приложения\nclass Workspace extends React.Component {\n    render() {\n        const {componentName, userComponents} = this.props;\n        const isUserComponent = userComponents.length;\n\n        const themeContext = this.context.theme;\n        // исходя из переданного пропсом имени выбирается текущий компонент для отображения\n        const Component = components[componentName];\n\n        // проверка на то, открыт ли компонент\n        const currentComponent = componentName && <Component />\n        // аналогично\n        const currentMenu = componentName && <ControlCenter resetStyles={this.resetStyles}/>;\n\n        return (\n            <div className={`workspace workspace_${themeContext}`}>\n                <div className=\"workspace__inner\">\n                    <div className=\"workspace__content\">\n                        {currentComponent}\n                    </div>\n                    {currentMenu}\n                </div>\n            </div>\n        )\n    }\n\n    // передача контекста текущей UI-темы\n    static contextType = ThemeContext;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        componentName: state.currentComponent.componentName,\n    }\n}\n\nexport default connect(mapStateToProps)(Workspace);"]},"metadata":{},"sourceType":"module"}