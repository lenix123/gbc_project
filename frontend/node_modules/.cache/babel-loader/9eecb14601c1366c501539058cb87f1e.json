{"ast":null,"code":"var _jsxFileName = \"/home/lenix/gbc/src/components/ControlCenter/ExportMenu.js\";\nimport React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlMenu.scss';\nimport { text } from \"@fortawesome/fontawesome-svg-core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StyleMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isDisabled: false\n    };\n\n    this.copyToClipboard = () => {\n      let str = document.getElementById('item-to-copy').innerText;\n      let el = document.createElement('textarea');\n      el.value = str;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this.setState({\n        isDisabled: true\n      });\n      setTimeout(this.changeText, 1500);\n    };\n\n    this.changeText = () => {\n      this.setState({\n        isDisabled: false\n      });\n    };\n  }\n\n  render() {\n    let btn;\n\n    if (!this.state.isDisabled) {\n      btn = /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.copyToClipboard,\n        className: \"control-menu__button\",\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }, this);\n    } else {\n      btn = /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: this.copyToClipboard,\n        className: \"control-menu__button control-menu__button_disabled\",\n        children: \"Copied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-menu control-menu_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"To import a component:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-menu__import\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control-menu__link\",\n          id: \"import\",\n          children: \"import \\\"./component/sdkdk/fk\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.copyToClipboard,\n          className: \"control-menu__button\",\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Then you can use it:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-menu__insert\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"control-menu__link\",\n          id: \"link\",\n          children: [\"Component className=\", \"ng-fl dm-dk gm-rr\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), btn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StyleMenu;","map":{"version":3,"sources":["/home/lenix/gbc/src/components/ControlCenter/ExportMenu.js"],"names":["React","Component","text","StyleMenu","state","isDisabled","copyToClipboard","str","document","getElementById","innerText","el","createElement","value","body","appendChild","select","execCommand","removeChild","setState","setTimeout","changeText","render","btn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iDAAP;AACA,SAAQC,IAAR,QAAmB,mCAAnB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,UAAU,EAAE;AADR,KADsB;;AAAA,SAkC7BC,eAlC6B,GAkCX,MAAM;AACrB,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAlD;AACA,UAAIC,EAAE,GAAGH,QAAQ,CAACI,aAAT,CAAuB,UAAvB,CAAT;AACAD,MAAAA,EAAE,CAACE,KAAH,GAAWN,GAAX;AACAC,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACAA,MAAAA,EAAE,CAACK,MAAH;AACAR,MAAAA,QAAQ,CAACS,WAAT,CAAqB,MAArB;AACAT,MAAAA,QAAQ,CAACM,IAAT,CAAcI,WAAd,CAA0BP,EAA1B;AACA,WAAKQ,QAAL,CAAc;AAACd,QAAAA,UAAU,EAAE;AAAb,OAAd;AACCe,MAAAA,UAAU,CAAC,KAAKC,UAAN,EAAkB,IAAlB,CAAV;AACJ,KA5C6B;;AAAA,SA6C9BA,UA7C8B,GA6CjB,MAAM;AACf,WAAKF,QAAL,CAAc;AAACd,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KA/C6B;AAAA;;AAI9BiB,EAAAA,MAAM,GAAI;AACN,QAAIC,GAAJ;;AACA,QAAI,CAAC,KAAKnB,KAAL,CAAWC,UAAhB,EAA4B;AACxBkB,MAAAA,GAAG,gBAAG;AAAQ,QAAA,OAAO,EAAE,KAAKjB,eAAtB;AAAuC,QAAA,SAAS,EAAE,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAGH,KAJD,MAIO;AACHiB,MAAAA,GAAG,gBAAG;AAAQ,QAAA,QAAQ,EAAE,IAAlB;AAAwB,QAAA,OAAO,EAAE,KAAKjB,eAAtC;AAAuD,QAAA,SAAS,EAAE,oDAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN;AAGH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAE,sBAAhB;AAAA,gCACI;AAAG,UAAA,SAAS,EAAE,oBAAd;AAAoC,UAAA,EAAE,EAAE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,UAAA,OAAO,EAAE,KAAKA,eAAtB;AAAuC,UAAA,SAAS,EAAE,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAK,QAAA,SAAS,EAAE,sBAAhB;AAAA,gCACI;AAAG,UAAA,SAAS,EAAE,oBAAd;AAAoC,UAAA,EAAE,EAAE,MAAxC;AAAA,6CACyB,mBADzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKiB,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAjC6B;;AAkDlC,eAAepB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../../assets/css/ControlCenter/ControlMenu.scss';\nimport {text} from \"@fortawesome/fontawesome-svg-core\";\n\nclass StyleMenu extends Component {\n    state = {\n        isDisabled: false\n    }\n    render () {\n        let btn;\n        if (!this.state.isDisabled) {\n            btn = <button onClick={this.copyToClipboard} className={\"control-menu__button\"}>\n                            Copy\n                        </button>\n        } else {\n            btn = <button disabled={true} onClick={this.copyToClipboard} className={\"control-menu__button control-menu__button_disabled\"}>\n                            Copied\n                        </button>\n        }\n        return (\n            <div className=\"control-menu control-menu_row\">\n                <p>To import a component:</p>\n                <div className={\"control-menu__import\"}>\n                    <p className={\"control-menu__link\"} id={\"import\"}>\n                        import \"./component/sdkdk/fk\"\n                    </p>\n                    <button onClick={this.copyToClipboard} className={\"control-menu__button\"}>Copy</button>\n                </div>\n                <p>Then you can use it:</p>\n                <div className={\"control-menu__insert\"}>\n                    <p className={\"control-menu__link\"} id={\"link\"}>\n                        Component className={\"ng-fl dm-dk gm-rr\"}\n                    </p>\n                    {btn}\n                </div>\n            </div>\n        )\n    }\n     copyToClipboard = () => {\n        let str = document.getElementById('item-to-copy').innerText;\n        let el = document.createElement('textarea');\n        el.value = str;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n        this.setState({isDisabled: true})\n         setTimeout(this.changeText, 1500)\n    }\n    changeText = () => {\n        this.setState({isDisabled: false})\n    }\n}\n\nexport default StyleMenu;\n"]},"metadata":{},"sourceType":"module"}